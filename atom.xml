<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hibernation</title>
  
  
  <link href="https://hibernation0814.github.io/atom.xml" rel="self"/>
  
  <link href="https://hibernation0814.github.io/"/>
  <updated>2024-12-19T14:48:30.401Z</updated>
  <id>https://hibernation0814.github.io/</id>
  
  <author>
    <name>小龙Hibernation</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>零撸网心云宽带共享计划</title>
    <link href="https://hibernation0814.github.io/2024/12/19/wangxinyun/"/>
    <id>https://hibernation0814.github.io/2024/12/19/wangxinyun/</id>
    <published>2024-12-19T14:44:10.000Z</published>
    <updated>2024-12-19T14:48:30.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="零撸网心云宽带共享计划"><a href="#零撸网心云宽带共享计划" class="headerlink" title="零撸网心云宽带共享计划"></a>零撸网心云宽带共享计划</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此项目一定要做满7天收益才会更高，一定要连续挂满7天时间！！！切记</span><br></pre></td></tr></table></figure><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-59.png" alt="最强零撸网心云，零撸网赚每天最多500+手机平板全自动g机项目，趟赚真的香"></p><p>感兴趣的伙伴 直接可以点击下载安装包进行注册绑定：<a href="https://www.onethingcloud.com/">网心云官网 (onethingcloud.com)</a></p><h1 id="以下是网心云的实操步骤："><a href="#以下是网心云的实操步骤：" class="headerlink" title="以下是网心云的实操步骤："></a>以下是网心云的实操步骤：</h1><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a><strong>前期准备</strong></h3><ul><li><strong>硬件要求</strong>：如果使用电脑作为共享设备，需满足 CPU≥2 核、内存≥2G、磁盘≥60G（建议使用固态硬盘），且操作系统为 Windows 10 或 Windows 11 ；如果使用手机，一般主流智能手机均可。网络要求电信、移动、联通均可，上行带宽≥20M 。</li><li><strong>了解产品</strong>：网心云主要产品分为硬件产品、软件产品和 X86 硬件产品三大类。新手可选择手机宝、电脑宝、OEA 等产品。</li></ul><h3 id="安装与注册"><a href="#安装与注册" class="headerlink" title="安装与注册"></a><strong>安装与注册</strong></h3><ul><li><strong>下载安装</strong>：可通过<a href="https://www.onethingcloud.com/">网心云官方网站</a>下载对应的客户端软件或硬件设备的刷机包等。电脑端安装时按照安装向导提示进行操作；手机端在应用商店搜索 “网心云” 或按照官方提供的链接进行下载安装。</li><li><strong>注册账号</strong>：打开安装好的网心云客户端或 APP，点击注册按钮，使用手机号码注册账号，并按照提示设置登录密码。</li></ul><h3 id="配置与运行"><a href="#配置与运行" class="headerlink" title="配置与运行"></a><strong>配置与运行</strong></h3><ul><li><p><strong>设备配置</strong></p></li><li><ul><li><strong>电脑端</strong>：安装完成后，打开网心云客户端，登录账号，在设置中上传所需共享的计算资源和设定使用限制。</li><li><strong>手机端</strong>：登录后点击运行即可。</li><li><strong>硬件设备</strong>：如 OEA 等，插好电源，接上网线，按照说明书输入地址，从浏览器访问设置界面，进行网络配置、带宽设置等操作。</li></ul></li><li><p><strong>绑定设备与查看状态</strong>：使用网心云 APP 扫描设备二维码或输入设备 ID 等方式进行绑定。绑定成功后，可在 APP 上查看所有设备的运行状态、昨日收益等情况。</p></li></ul><h3 id="优化与提现"><a href="#优化与提现" class="headerlink" title="优化与提现"></a><strong>优化与提现</strong></h3><ul><li><strong>优化收益</strong>：保持设备稳定运行，避免频繁重启或关机；确保网络连接稳定，上行带宽充足；根据设备性能和网络情况，合理设置资源共享比例等。</li><li><strong>提现收益</strong>：网心云的提现时间为每周二，可提现至支付宝或银行卡。</li></ul><h1 id="挂机实现收益实操步骤"><a href="#挂机实现收益实操步骤" class="headerlink" title="挂机实现收益实操步骤"></a>挂机实现收益实操步骤</h1><h2 id="电脑宝"><a href="#电脑宝" class="headerlink" title="电脑宝"></a>电脑宝</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a><strong>准备工作</strong></h3><ul><li><strong>硬件配置检查</strong>：确保电脑满足网心云电脑宝的最低配置要求，即 CPU≥2 核、内存≥2G、磁盘≥60G（建议使用固态硬盘），操作系统为 Windows 10 或 Windows 11。</li><li><strong>网络环境准备</strong>：确认网络连接正常，且上行带宽≥20M 。</li></ul><h3 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a><strong>下载与安装</strong></h3><ul><li><strong>下载客户端</strong>：访问网心云官方网站，找到电脑宝客户端的下载链接并进行下载。</li><li><a href="https://www.onethingcloud.com/products/zqb-lite/">电脑宝-软件产品-网心云 (onethingcloud.com)</a></li><li><strong>安装客户端</strong>：找到下载好的安装包，双击运行，按照安装向导的提示完成安装过程。</li></ul><h3 id="注册与登录"><a href="#注册与登录" class="headerlink" title="注册与登录"></a><strong>注册与登录</strong></h3><ul><li><strong>注册账号</strong>：如果没有网心云账号，启动电脑宝客户端后，点击 “注册” 按钮，按照提示填写相关信息完成注册。</li><li><strong>登录账号</strong>：已有账号的用户，在客户端启动后，输入账号和密码进行登录。</li></ul><h3 id="配置与运行-1"><a href="#配置与运行-1" class="headerlink" title="配置与运行"></a><strong>配置与运行</strong></h3><ul><li><strong>绑定设备</strong>：登录成功后，按照客户端的提示将电脑宝与网心云账号进行绑定。</li><li><strong>设置参数</strong>：可根据自身需求和网络情况，在客户端中对电脑宝进行一些参数设置，如缓存路径、资源分配等。</li><li><strong>开始运行</strong>：点击客户端左上角的 “开始赚钱” 标签，电脑宝将开始运行，共享电脑的闲置资源。</li></ul><h3 id="查看收益与提现"><a href="#查看收益与提现" class="headerlink" title="查看收益与提现"></a><strong>查看收益与提现</strong></h3><ul><li><strong>查看收益</strong>：可在电脑宝客户端右上角查看昨日收益，也可下载网心云 APP 登录账号，查看更详细的收益情况和历史记录。</li><li><strong>提现操作</strong>：提现仅能在网心云 APP 中进行，每周二为提现日，可将收益提现至支付宝或银行卡 。</li></ul><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20241219223216565.png" alt="image-20241219223216565"></p><h2 id="手机宝"><a href="#手机宝" class="headerlink" title="手机宝"></a>手机宝</h2><h3 id="下载与安装-1"><a href="#下载与安装-1" class="headerlink" title="下载与安装"></a><strong>下载与安装</strong></h3><ol><li><strong>确认设备条件</strong>：准备一台运行内存≥3G、存储内存≥10G，且安卓系统版本在 Andriod7.0 及以上的安卓手机 ，手机宝暂不支持苹果手机安装。</li><li><strong>下载安装包</strong>：可在手机应用商店搜索 “网心云手机宝” 进行下载，也可通过网心云官方网站提供的链接下载。</li><li><strong>安装应用</strong>：找到下载好的 APK 包进行安装，安装后打开即可。</li></ol><h3 id="注册与登录-1"><a href="#注册与登录-1" class="headerlink" title="注册与登录"></a><strong>注册与登录</strong></h3><ol><li><strong>注册账号</strong>：打开手机宝 APP，按照提示填写手机号码等信息完成注册。若之前未注册过网心云账号，首次绑定时将为默认注册网心云账号。</li><li><strong>登录账号</strong>：注册成功后，使用手机号码和密码登录手机宝 APP 。</li></ol><h3 id="配置与运行-2"><a href="#配置与运行-2" class="headerlink" title="配置与运行"></a><strong>配置与运行</strong></h3><ol><li><strong>开启赚钱功能</strong>：点击手机桌面 APP 图标，进入 APP 首页，点击【赚钱开关】运行设备 。</li><li><strong>设置权限</strong>：前往手机宝 APP【我的】页面，找到【设置】，开启【自启动权限】和【电池优化白名单】，以保证手机宝能够稳定运行。</li></ol><h3 id="绑定设备与查看收益"><a href="#绑定设备与查看收益" class="headerlink" title="绑定设备与查看收益"></a><strong>绑定设备与查看收益</strong></h3><ol><li><strong>绑定设备</strong>：</li></ol><ul><li><strong>方法一</strong>：点击手机宝 APP 任务栏【绑定奖励】或点击【我的】-【绑定设备】，输入网心云手机号验证码进行绑定。</li><li><strong>方法二</strong>：用网心云 APP 的扫一扫功能，扫码手机宝 APP 的二维码进行绑定。在手机上打开网心云 APP，点击 APP 首页【右上角】-【+】-【扫一扫】，再在手机宝 APP 中打开手机宝 APP 首页【右上角】-【二维码】进行扫码绑定。</li></ul><ol><li><strong>查看收益</strong>：</li></ol><ul><li><strong>通过手机宝 APP 查看</strong>：可查看昨日收益，由于设备的数据安全考虑，手机宝上最多可查看 7 日的收益数据。</li><li><strong>通过网心云 APP 查看</strong>：登录网心云 APP，可查看绑定设备的总收益以及收益明细，也能更方便管理设备。</li></ul><h3 id="提现"><a href="#提现" class="headerlink" title="提现"></a><strong>提现</strong></h3><p>每周二可在 “网心云 App” 登录绑定的账号，在【我的】-【我的钱宝】-【账户余额】中提取设备产生的收益，可提现至支付宝或银行卡 。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;零撸网心云宽带共享计划&quot;&gt;&lt;a href=&quot;#零撸网心云宽带共享计划&quot; class=&quot;headerlink&quot; title=&quot;零撸网心云宽带共享计划&quot;&gt;&lt;/a&gt;零撸网心云宽带共享计划&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>闲小鱼</title>
    <link href="https://hibernation0814.github.io/2023/12/14/%E9%97%B2%E5%B0%8F%E9%B1%BC/"/>
    <id>https://hibernation0814.github.io/2023/12/14/%E9%97%B2%E5%B0%8F%E9%B1%BC/</id>
    <published>2023-12-14T15:21:02.000Z</published>
    <updated>2023-12-14T15:30:46.140Z</updated>
    
    <content type="html"><![CDATA[<h2 id="闲小鱼教你小白如何在闲鱼上赚钱？"><a href="#闲小鱼教你小白如何在闲鱼上赚钱？" class="headerlink" title="闲小鱼教你小白如何在闲鱼上赚钱？"></a>闲小鱼教你小白如何在闲鱼上赚钱？</h2><p>作为一个毫无经验的闲鱼小白，第一个月交易额就超过10000块钱！没花一分钱，每天只花1-2小时玩闲鱼APP！</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image002.jpg" alt="img"></p><p>下面我会用通俗易懂的语言，从闲鱼赚钱的<strong>项目背景</strong>、<strong>运作原理</strong>、<strong>操作流程。以</strong>及具体的<strong>运营方法</strong>，详细且系统地跟大家介绍，我是如何做的！</p><p>这篇文章都是干货，信息量很大。</p><p>如果你有现在就想去做的冲动，那么仔细看每句话，会有很大的帮助。</p><p>这篇干货在市面上的付费课程价值超过<strong>5000元</strong>！</p><p>本文所讲的全部方法，都经过我们团队和数千名学员亲身验证成功有效！你不需要有任何电商运营经验，只需要照着做，就可以成功在闲鱼开店！</p><p>大家可以根据目录，选择自己需要的章节进行学习</p><ol><li>小白扫盲，快问快答</li><li>闲鱼平台的优势是什么？</li><li>闲鱼赚钱的原理是什么？</li><li>闲鱼赚钱的主流玩法有哪些？</li><li>闲鱼赚钱的操作流程是怎样的？</li><li>如何养号，获得更多曝光？</li><li>如何选品，卖什么最赚钱？</li><li>如何进货，货源有哪些？</li><li>如何正确上架产品？</li><li>如何做好客服，提高转化率？</li><li>如何处理售后问题？</li><li>如何避免违规？</li><li>如何防止被骗？</li><li>如何开首单？</li></ol><p>​    全文通俗易懂，结构明确，表达清晰，你只要能识字就能看懂！</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image004.gif" alt="17a27ad1335367acce777768009bb15"></p><p>问：需要启动资金吗？</p><p>答：不需要，只要1台手机、1个淘宝账号、1个支付宝就可以开始。</p><p>问：需要囤货吗？</p><p> 答：不需要，可以选择由货源负责一件代发。</p><p>问：需要微信引流，朋友圈打广告吗？</p><p> 答：不需要，正经开店做生意，不是做微商！不用刷屏打广告。</p><p>问：需要缴纳保证金吗？</p><p>答：不需要，在闲鱼做买卖，不需要给官方缴纳任何费用</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image006.gif" alt="d13b565ed429c2b0abb187c64855855"></p><p><strong>1、平台背景强，长期稳定</strong></p><p>阿里巴团旗下一个二手交易平台，是淘宝专门把二手交易业务分拆出来独立运营的平台产品。</p><p>平台已经上线6年，用户数接近5个亿！</p><p>很多卖家已经开店4~5年！可以说是相当稳定！</p><p><strong>2、流量大，行业第一</strong></p><p>闲鱼是目前全网流量最大的二手交易平台。</p><p>根据“闲鱼”官方数据显示，每天有超过25万件闲置物品交易，21年一年闲鱼的成交金额已逾千亿。</p><p><strong>3、流量公平分配，完全免费</strong></p><p>这是在闲鱼做生意，最大的优势！</p><p>闲鱼的流量分配是相对比较公平的，不需要花钱买。</p><p>不像淘宝什么直通车、拼多多等等流量买卖机制，烧钱烧起飞。</p><p>在闲鱼每个人都可以平等自由获得！</p><p>流量免费！流量免费！流量免费！</p><p><strong>4、用户年轻，付费意愿强</strong></p><p>闲鱼的活跃用户主要以80后、90后为主，产品需求多样化，物美价廉的商品在闲鱼特别受欢迎。</p><p>所以对于想要零成本开启一份副业，每个月增加几千块钱收入的小伙伴来说，是非常适合的。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image008.gif" alt="5881380982be60573b31f84faa596ab"></p><p>原理非常简单：就是做中间商，赚差价</p><p><strong>有些人会问，客户为什么不在淘宝拼多多买，而是在你这里买，这里我想说，在淘宝上，同样的一件衣服，有商家卖99，也有商家卖79，两个商家肯定都能卖出去，这就是千人千面和信息差，同一个平台都存在这个大的信息差，别说跨平台中间了，所以大家尽管放心！</strong></p><p>包括线上淘宝、京东、苏宁，线下国美、沃尔玛、各大商超！他们统统在赚差价！</p><p>我们也就可以低价进货，加价搬到闲鱼上卖，从中赚取差价。</p><p>早年很多做淘宝的个人卖家，都是这个干的，无货源从网上进货，然后到淘宝上卖，每月净赚几万块。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image010.gif" alt="9689621f62e1f2dbad391a069ef5b89"></p><p>卖实物：低价进货，搬运到闲鱼高价卖出（核心玩法）；</p><p>卖虚拟：卖网盘资料、付费课程、影视作品等（违规产品会封号）；</p><p>做引流：发布诱饵商品，引导添加微信（违规行为会封号）</p><p>搞抽奖：比如福袋玩法，说白了就是1元抽奖（风险高会被投诉）</p><p>卖服务：叫醒服务、语音陪聊、助眠哄睡、摄影约拍、塔罗测算、心理咨询、留学咨询、考研辅导等等；</p><p>闲鱼赚钱玩法众多，最适合长久做的只有第一种，本文主要也只介绍这个玩法。</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image012.gif" alt="1594035156(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image012.gif)"></p><p>①注册：手机安装闲鱼APP，并用支付宝账号登录，实名认证+授权芝麻信用；</p><p>②养号：不用养号，直接干</p><p>③选品：寻找需求量大，能赚到差价的商品；</p><p>④货源：到阿里巴巴1688、拼多多、淘宝联盟、世界工厂等平台找到低价的同款产品；有自有货源的可以用自己的货源</p><p>⑤上架：上传货源的产品图片，复制优化别人的宝贝描述发布；</p><p>⑥客服：并重复3-5步，直到有客户主动咨询，做好售前咨询服务，引导客户下单成交；</p><p>⑦发货：客户在闲鱼下单，你到货源店下单，货源发货后，把快递单号填到闲鱼发货；</p><p>⑧售后：用户退货，你就到货源店退货；</p><p>⑨赚钱：重复2-8步，坚持做，不断优化，就可以赚钱；</p><h5 id="六、闲鱼店铺如何提升权重"><a href="#六、闲鱼店铺如何提升权重" class="headerlink" title="六、闲鱼店铺如何提升权重"></a><strong>六、闲鱼店铺如何提升权重</strong></h5><p><strong>1、如何提高店铺权重</strong></p><p>闲鱼店铺的基础权重跟你淘宝和支付宝账号权重是一致的，跟账号年龄，交易量有关。</p><p>但闲鱼单独的权重，主要表现在获得流量的效率，权重越高的账号，发布宝贝可以更快地获得推荐。</p><p>想要提高店铺权重，你需要提高这几个数据：</p><p>①芝麻信用分②好评数③订单数④活跃率</p><p>① 提高芝麻信用分：</p><p>支付宝芝麻信用分越高，宝贝排名越靠前，一般分数大于等于650分比较好，如果没有也没有关系。分低不代表不能做，不要授权！</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image014.gif" alt="1594035269(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image014.gif)"></p><p>芝麻信用分</p><p>② 提高好评数：</p><p>在闲鱼不但卖东西可以获得评价，买东西也可以获得评价。</p><p>所以可以通过在闲鱼上买别人的产品，要求卖家给我们好评的方式，提高好评数。</p><p>③提高订单数</p><p>订单数可以是你卖出去的，也可以是你买到的。</p><p>新店首先可以通过购买别人的商品，提高店铺的订单数。</p><p>同时你也可以开始根据合理的节奏上架宝贝，一开始新账号权重低，上架宝贝的目的不是为了赚钱，而是为了促成交易，提高账号权重。</p><p>④提高活跃率</p><p>新店每天要不断打开闲鱼刷一刷，看一看。</p><p>可以给别人的产品点赞、留言，也可以咨询。</p><p>把自己当成一个闲鱼的忠实用户，真实的去操作。</p><p>其次非常重要的就是，一定要快速回复客户的咨询，回复得越快，成交的概率越大哦！</p><p><strong>2、如何提高商品权重</strong></p><p>商品的权重决定了商品的搜索排名，从而决定曝光量！</p><p>提高商品权重，需要提高商品的这些数据：</p><p>①想要数 ②浏览量 ③留言数 ④超赞数⑤订单数</p><p>想要数、浏览量、留言数、超赞数都可以进互赞鱼塘，找人互刷基础数据，基本是20个想要，5个超赞，3条留言，每天没事就可以刷一刷。</p><p>订单数的提升主要还是靠慢慢积累，早期总是不出单的情况，可以用自己的小号刷1单，但一定要慎用！有被违规降权的风险。</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image016.gif" alt="1594035426(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image016.gif)"></p><p>记住选品的核心就是：不断挖掘客户群体的需求，找到满足需要的产品卖给客户。</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image018.gif" alt="1594035548(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image018.gif)"></p><p>要注意一定是需求在前，销售在后。只有满足需求的销售，才是有效的。</p><p>没有需求的销售，那是强买强卖，肯定做不起来的。</p><p><strong>选品本着三个原则，多看，多比较</strong></p><p><strong>第一，闲鱼上，我想要的人多，代表能卖出去</strong></p><p><strong>第二，拼多多或者淘宝上对比价格，找到拼多多或者淘宝上卖的价格低的，代表你有利润，利润越高越好</strong></p><p><strong>第三，淘宝或者拼多多，评价要好，代表质量没问题，不会有售后</strong></p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image020.gif" alt="1594036442(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image020.gif)"></p><p>货源的本质就是，找到相同商品，更便宜的购买渠道，简单来说就是：更低的拿货价。</p><p>拼多多，淘宝，其他平台都不要去，拼多多需要准备多账号，避免下单被取消</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image022.gif" alt="1594036633(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image022.gif)"></p><p>简单来说就是把货源的文字图片稍加处理，复制粘贴到闲鱼上发布</p><p><strong>1、标题描述怎么写（可以直接复制拼多多的标题）</strong></p><p>前面30个字，不用在意语句是否通顺，把宝贝能想到的不同叫法写上去；</p><p>比如热水袋：热水袋、暖手宝、热水壶、暖手壶等等；</p><p>然后增加一些修饰词语比如：自用、闲置、99新等等；</p><p>如果有品牌，能带上更好比如：小米、三星、华为、苹果、格力等等；</p><p>其次后面可以增加描述宝贝的成色(新旧程度)，在哪里买的，用了多久，有没有什么问题，没有问题就写功能正常无任何问题；</p><p><strong>2、封面图片怎么选</strong></p><p>图片要光线要足；背景要干净，主体突出；图片要清晰，不能模糊；尽量展示产品的多个角度；</p><p><strong>3、产品标签怎么设置</strong></p><p>产品标签等于产品核心搜索词；</p><p>标签设置1~5个就够了，不用太多；</p><p>标签不可以重复设置，每种只要设置1个；</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image024.gif" alt="1594036719(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image024.gif)"></p><p><strong>1、做好客服的基础方法</strong></p><p>要善于利用自动回复功能，把无脑用户常问的问题，直接自动回复了。</p><p>早期可以多跟用户闲聊，给买家留下好印象，求带图好评。</p><p>客户想要砍价，不要拒绝，而是给他少个几块钱，然后要求他收货后给好评交换。</p><p>砍价太多的客户，只需要坚持你的底价就好了，但不要得罪他，他不买，自己会走。</p><p><strong>2、不要在聊天的时候发布违禁词</strong></p><p>例如：QQ、电话号码、微信、威信、违心、维新、WX、VX等任何相似谐音都不行。（做引流的一定要注意方式方法，一天单号最好不要超过20个）</p><p>会被封号！会被封号！会被封号！封号就没得救了！</p><p>违禁词有很多，官方没有公开，这里篇幅有限不详细列出。</p><p>还有就是即使客户再傻X，也不要在聊天的时候说脏话，会被禁言7天起步。</p><p><strong>3、一定要懂的销售话术</strong></p><p>想要快速出手，不会销售可不行！</p><p>尽量不要主动推销自己的宝贝，给别人很想卖的感觉，这样谈判自己会处于弱势；</p><p>适时的营造非常火爆感觉，让对方着急想要买你的宝贝；</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image026.gif" alt="1594036868(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image026.gif)"></p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image028.gif" alt="1594036990(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image028.gif)"></p><p>在没有遇到骗子，偷梁换柱故意退货的情况下，售后其实挺简单的。</p><p>很多售后问题，都是因为售前没有沟通清楚导致的！</p><p>首先在售前要注意那些看屁事特别多、要求特别高的人，这类人最好不要卖给他，不然售后很麻烦。</p><p>如果真的因为商品质量问题买家要退货，当然要给人家退。</p><p>卖家申请退货，你就去货源平台申请退货，然后把退货地址填写到闲鱼上，点同意退货退款就可以了。</p><p>商品问题导致的退费，卖家需要承担退货的运费。</p><p>但一般平台都有退货运费险，正好可以补贴给你，买家货退了之后，你再转给他就好了。</p><p>对于那些你感觉会给差评的客户，一定想办法哄着他确认收货并好评，给他发红包什么的。要么就态度友好地引导他退货，不要给他评价的机会。</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image030.gif" alt="1594037015(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image030.gif)"></p><p><strong>1、常见要避免的违规类型</strong></p><p>2、不要发布违规商品：闲鱼不允许卖药品、医疗器械、食品(新鲜水果除外)；动物或动物制品；违法服务(在线招嫖、代考作弊、风水算命等等)；</p><p>不要发布假冒商品：卖高仿、A货等各种形式的冒牌货，被发现直接封号；</p><p>不要发布虚拟商品：闲鱼上不允许卖任何虚拟资源商品(网盘资源、盗版课程、影视资源等等)</p><p>不要频繁切换登录手机：不要在不同手机上来回登录自己的闲鱼账号，会被封；</p><p>不要有违规行为：不要人身攻击别人，不要发布垃圾引流广告；</p><p>不要发布违规信息：比如微信、V、VX、WX等各种变种引流广告都不能发，具体很多，这里篇幅有有限，不详细写；</p><p>不要借账号给别人：账号是最宝贵的财富，一旦别人做违规的事情被封，得不偿失；</p><p><strong>3、违规后的惩罚</strong></p><p>一般发布信息违规是禁言7天，7天内不能有任何互动，发布任何信息，包括商品；</p><p>其次发布违规商品，商品会被直接下架；</p><p>当账户违反了一般&#x2F;严重&#x2F;违规行为，单项累计达十二分节点即被系统处以店铺屏蔽、限制发布商品及公示警告七天等节点处罚。</p><p><strong>4、违规了怎么办</strong></p><p>被禁言7天，如果不是真的误判，申诉没用，直接老老实实等7天，自动解封；</p><p>账号被永久封禁，系统是无法解封的，需要联系人工电话客服，真诚道歉，请求解封，有一定的几率成功；</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image032.gif" alt="1594037184(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image032.gif)"></p><p><strong>1、交易保证金（开通买卖服务）骗局</strong></p><p>闲鱼上卖东西，是不需要缴纳任何保证金的；</p><p>也不需要开通任何什么《买卖服务》；</p><p>闲鱼官方是不会给你发任何私信的；</p><p>骗子会假冒官方头像，通过私信给你发一些莫名其妙的通知，其中就包括缴纳1000元交易保证金，千万别信啊；</p><p><strong>2、脱离闲鱼平台交易骗局</strong></p><p>凡是让你去其他平台沟通、交易的人99%是骗子；</p><p>一般借口就是支付宝没钱，可不可以微信转你；</p><p>遇到这种情况，跟他说必须在闲鱼交易，或者直接不鸟他就好了；</p><p><strong>3、发货后修改地址骗局</strong></p><p>买家在你发货后，突然跟你说地址填错了，让你把货物中转到其他地址；</p><p>到时候他就会申请【未收到货退款】，说东西没拿到；</p><p>所以交易前确认地址，一旦发货就不要修改地址，地址是买家填的，要他自己负责；</p><p><strong>4、当面交易，事后退款骗局</strong></p><p>在当面交易时，买家拿到东西后，没有当着你的面，在APP点确认收货；</p><p>等你们各自回家后，买家会申请退款，说自己没有拿到东西，闲鱼平台一般会同意退款，而且不会帮助你维权；</p><p>所以当面交易时，一手交钱，一手交货。一定要买家当面确认收货；</p><p><strong>5、非全款交易</strong></p><p>买家会跟你说，现在没那么多钱，可不可以分期付款，或者先付个定金，让你先发货；</p><p>闲鱼是不支持任何形式的分期付款的；</p><p>如果你改了价，发了货，只让买家付了一部分钱，他收到货之后，立马确认收货，你剩下的钱也不会给你了；</p><p><img src="file:///D:/AppData/Local/Tmp/msohtmlclip1/01/clip_image034.gif" alt="1594037348(https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/clip_image034.gif)"></p><p>找准第一个产品，符合下面要求，更容易开单</p><p>1 .是实物而且不违规的商品。</p><p>2 .宝贝想要数超过500。</p><p>3 .包邮价格低于10元。</p><p>按照我视频里面讲的去实操，老老实实做，就能出单</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;闲小鱼教你小白如何在闲鱼上赚钱？&quot;&gt;&lt;a href=&quot;#闲小鱼教你小白如何在闲鱼上赚钱？&quot; class=&quot;headerlink&quot; title=&quot;闲小鱼教你小白如何在闲鱼上赚钱？&quot;&gt;&lt;/a&gt;闲小鱼教你小白如何在闲鱼上赚钱？&lt;/h2&gt;&lt;p&gt;作为一个毫无经验的闲鱼小白，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>post</title>
    <link href="https://hibernation0814.github.io/2023/04/26/post/"/>
    <id>https://hibernation0814.github.io/2023/04/26/post/</id>
    <published>2023-04-26T07:43:33.000Z</published>
    <updated>2023-04-26T08:27:45.171Z</updated>
    
    <content type="html"><![CDATA[<p>Love</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Love&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Experience</title>
    <link href="https://hibernation0814.github.io/2022/11/01/Experience/"/>
    <id>https://hibernation0814.github.io/2022/11/01/Experience/</id>
    <published>2022-11-01T07:19:42.000Z</published>
    <updated>2023-03-10T10:17:59.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="资料、账号、信息"><a href="#资料、账号、信息" class="headerlink" title="资料、账号、信息"></a>资料、账号、信息</h1><h3 id="git-账号"><a href="#git-账号" class="headerlink" title="git 账号"></a>git 账号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">longsiyuan</span><br><span class="line">20040814Lsy</span><br></pre></td></tr></table></figure><h3 id="svn-账号"><a href="#svn-账号" class="headerlink" title="svn 账号"></a>svn 账号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">longsiyuan</span><br><span class="line">密码：Dq6csGI33Aa8</span><br><span class="line"></span><br><span class="line">svn://svn.jieyisoft.com/haerbin95128</span><br></pre></td></tr></table></figure><h3 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h3><p><code>http://git.jieyisoft.com:11180/harbin/harbin-mobile-service.git</code></p><h3 id="企业管理"><a href="#企业管理" class="headerlink" title="企业管理"></a>企业管理</h3><p><a href="http://oa.jieyisoft.com:31001/">http://oa.jieyisoft.com:31001/</a></p><h3 id="95128-数据库"><a href="#95128-数据库" class="headerlink" title="95128 数据库"></a>95128 数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">95128 数据库 IP：remote.hrbcst.com 端口：6721 数据库SID：zhdb 数据库用户：hrbtaxi 数据库密码：3VFjE628XpskLwQt</span><br></pre></td></tr></table></figure><h3 id="95128-服务器"><a href="#95128-服务器" class="headerlink" title="95128 服务器"></a>95128 服务器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">地址： remote.hrbcst.com:4222</span><br><span class="line">用户 hrbapp</span><br><span class="line">公钥密码：iccard</span><br></pre></td></tr></table></figure><h1 id="修炼心得"><a href="#修炼心得" class="headerlink" title="修炼心得"></a>修炼心得</h1><h3 id="9-20"><a href="#9-20" class="headerlink" title="9.20"></a>9.20</h3><h4 id="编写接口"><a href="#编写接口" class="headerlink" title="编写接口"></a>编写接口</h4><p>1.尝试编写这个接口</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220919184425480.png" alt="image-20220919184425480"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220919184900315.png" alt="image-20220919184900315"></p><h4 id="2-连接数据库"><a href="#2-连接数据库" class="headerlink" title="2.连接数据库"></a>2.连接数据库</h4><p>nacos位置</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220919184739993.png" alt="image-20220919184739993"></p><p>逻辑有误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//1、查询司机信息表，查看司机是否存在--司机表：TblDriverInfo，查询mapper:tblDriverInfoMapper</span><br><span class="line">//2、查询车辆表，查看车辆信息是否存在--车辆表：TblTaxiCar,查询mapper:tblTaxiCarMapper</span><br><span class="line">//3、查询车辆司机绑定关系表，查看司机和车辆是否存在绑定关系--绑定表：TblDriverCarRel,查询mapper:tbldrivercarRelMapper</span><br></pre></td></tr></table></figure><p>查询主键不用list</p><h3 id="9-22"><a href="#9-22" class="headerlink" title="9.22"></a>9.22</h3><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##先根据接口查找根据时间查看报错编号</span><br><span class="line">more consoletaxi.log | grep &#x27;/consoletaxi/carinfo/queryTrajectory/&#x27;</span><br><span class="line">##然后根据报错编号查看报错信息</span><br><span class="line">more consoletaxi.log | grep &#x27;08fd6c7dd2024f1f&#x27;</span><br><span class="line"></span><br><span class="line">##查看最后两百行日志</span><br><span class="line">tail -200f consoletaxi.log</span><br></pre></td></tr></table></figure><h4 id="idea查看clickhouse表结构"><a href="#idea查看clickhouse表结构" class="headerlink" title="idea查看clickhouse表结构"></a>idea查看clickhouse表结构</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220922174307460.png" alt="image-20220922174307460"></p><h4 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220923142940142.png" alt="image-20220923142940142"></p><h3 id="9-26"><a href="#9-26" class="headerlink" title="9.26"></a>9.26</h3><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><h5 id="TblDeviceInfoPagingListData"><a href="#TblDeviceInfoPagingListData" class="headerlink" title="TblDeviceInfoPagingListData"></a>TblDeviceInfoPagingListData</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926105407000.png" alt="image-20220926105407000"></p><h5 id="TblDeviceInfoService"><a href="#TblDeviceInfoService" class="headerlink" title="TblDeviceInfoService"></a>TblDeviceInfoService</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926105506891.png" alt="image-20220926105506891"></p><h5 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926105535060.png" alt="image-20220926105535060"></p><h5 id="unbindCar"><a href="#unbindCar" class="headerlink" title="unbindCar"></a>unbindCar</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926105639070.png" alt="image-20220926105639070"></p><p><code>*注意:</code>驼峰命名不影响测试类使用Data类的字段，<strong style="color:red;">mapper也需要写</strong></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926151100302.png" alt="image-20220926151100302"></p><blockquote><p>and应该放在if标签里面，不然会有逻辑问题，就不能单独查询id</p></blockquote><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926155123031.png" alt="image-20220926155123031"></p><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926150944530.png" alt="image-20220926150944530"></p><p>命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh</span><br></pre></td></tr></table></figure><h4 id="学习Jenkins"><a href="#学习Jenkins" class="headerlink" title="学习Jenkins"></a>学习Jenkins</h4><h5 id="使用Docker安装Jenkins"><a href="#使用Docker安装Jenkins" class="headerlink" title="使用Docker安装Jenkins"></a>使用Docker安装Jenkins</h5><ol><li><h5 id="准备挂载目录"><a href="#准备挂载目录" class="headerlink" title="准备挂载目录"></a>准备挂载目录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> home/</span><br><span class="line"><span class="built_in">mkdir</span> jenkins_home</span><br></pre></td></tr></table></figure><p>一定要赋予修改权限，不然挂载会失败，我们这里给最高权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 777 jenkins_home</span><br></pre></td></tr></table></figure></li><li><h5 id="拉取Jenkins镜像"><a href="#拉取Jenkins镜像" class="headerlink" title="拉取Jenkins镜像"></a>拉取<strong>Jenkins</strong>镜像</h5></li></ol><h6 id="执行docker命令"><a href="#执行docker命令" class="headerlink" title="执行docker命令"></a>执行docker命令</h6>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=jenkins -p 8080:8080 -v /home/jenkins_home:/var/jenkins_home -v /usr/local/java/jdk:/usr/local/jdk1.8 -v /usr/local/java/apache-maven-3.8.5:/usr/local/apache-maven-3.8.5 -v $(which docker):/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock jenkins/jenkins:lts</span><br></pre></td></tr></table></figure><p>   <img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926180026810.png" alt="image-20220926180026810"></p><p>   <code>-v /home/jenkins_home:/var/jenkins_home</code>：是对容器内存储Jenkins的一些配置信息的文件夹<br>   <code>-v /usr/local/java/jdk:/usr/local/jdk1.8</code>：是把linux下的jdk和容器内的关联（配置Jenkins时使用）<br>   <code>-v /usr/local/java/apache-maven-3.8.5:/usr/local/apache-maven-3.8.5</code>：是把linux下的maven和容器内的关联（配置Jenkins时使用）</p><p>   <code>-v $(which docker):/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock</code>：是可以在Jenkins容器里使用我们Linux下的docker。</p><h5 id="运行Jenkins容器"><a href="#运行Jenkins容器" class="headerlink" title="运行Jenkins容器"></a>运行Jenkins容器</h5><p>输入：<code>http://127.0.0.1:8080/</code>（ip+端口号）</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926180209158.png" alt="image-20220926180209158"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926180501179.png" alt="image-20220926180501179"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220926183432456.png" alt="image-20220926183432456"></p><p>中间那一串就是密码</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927093548430.png" alt="image-20220927093548430"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927093832274.png" alt="image-20220927093832274"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927094311240.png" alt="image-20220927094311240"></p><h5 id="保存配置地址"><a href="#保存配置地址" class="headerlink" title="保存配置地址"></a>保存配置地址</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927094434047.png" alt="image-20220927094434047"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927094451157.png" alt="image-20220927094451157"></p><h5 id="配置插件镜像"><a href="#配置插件镜像" class="headerlink" title="配置插件镜像"></a>配置插件镜像</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927094953534.png" alt="image-20220927094953534"></p><p>输入：<code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</code></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927095732994.png" alt="image-20220927095732994"></p><p>点击提交</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927095950765.png" alt="image-20220927095950765"></p><h5 id="安装ssh插件"><a href="#安装ssh插件" class="headerlink" title="安装ssh插件"></a>安装ssh插件</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927100010541.png" alt="image-20220927100010541"></p><p>&#x3D;&#x3D;安装完成重启一下Jenkins，翻到最下面有重启选项，不是重启docker容器&#x3D;&#x3D;</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927100557044.png" alt="image-20220927100557044"></p><p>&#x3D;&#x3D;重启了好长时间…不知道为什么&#x3D;&#x3D;</p><h5 id="添加ssh登录账号凭据"><a href="#添加ssh登录账号凭据" class="headerlink" title="添加ssh登录账号凭据"></a>添加ssh登录账号凭据</h5><p>点击<code>系统管理</code>，找到下图点击</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927150557612.png" alt="image-20220927150557612"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927151621603.png" alt="image-20220927151621603"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927151926029.png" alt="image-20220927151926029"></p><h5 id="配置全局ssh"><a href="#配置全局ssh" class="headerlink" title="配置全局ssh"></a>配置全局ssh</h5><p>点击<code>系统管理</code>，找到<code>系统配置</code></p><p>点击新增：</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927160035081.png" alt="image-20220927160035081"></p><p>点击保存：</p><p><img src="/.io//软件/Typora/upload/image-20220927160418576.png" alt="image-20220927160418576"></p><h5 id="配置jdk和maven"><a href="#配置jdk和maven" class="headerlink" title="配置jdk和maven"></a>配置jdk和maven</h5><p>点击<code>系统管理</code>，找到<code>全局工具配置</code>：</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927170827111.png" alt="image-20220927170827111"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927170840685.png" alt="image-20220927170840685"></p><p>我linux里面没有maven</p><h5 id="准备Springboot项目到git"><a href="#准备Springboot项目到git" class="headerlink" title="准备Springboot项目到git"></a>准备Springboot项目到git</h5><p>有一个能请求打印的项目即可，</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927173759425.png" alt="image-20220927173759425"></p><p><strong>Dockerfile</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line"></span><br><span class="line">COPY *.jar /app.jar</span><br><span class="line"></span><br><span class="line">CMD [&quot;--server.port=8080&quot;]</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;/app.jar&quot;]</span><br></pre></td></tr></table></figure><p>新建git仓库，绑定项目的git地址，上传即可</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220927174019315.png" alt="image-20220927174019315"></p><h5 id="使用Jenkins部署项目"><a href="#使用Jenkins部署项目" class="headerlink" title="使用Jenkins部署项目"></a>使用Jenkins部署项目</h5><p>1、新建任务</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220928133618485.png" alt="image-20220928133618485"></p><p>2、添加git凭据</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220928134227455.png" alt="image-20220928134227455"></p><p>3、添加maven构建</p><p>&#x3D;&#x3D;点击高级出现pom&#x3D;&#x3D;</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220928134910881.png" alt="image-20220928134910881"></p><p>4、增加构建执行shell</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220928135107959.png" alt="image-20220928135107959"></p><p>shell脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 服务名称</span><br><span class="line">SERVER_NAME=jenkins</span><br><span class="line"></span><br><span class="line"># 源jar名称，mvn打包之后，target目录下的jar包名称</span><br><span class="line">JAR_NAME=demo-0.0.1-SNAPSHOT</span><br><span class="line"></span><br><span class="line"># jenkins下的目录</span><br><span class="line">JENKINS_HOME=/var/jenkins_home/workspace/jenkins</span><br><span class="line"></span><br><span class="line"># 等待三秒</span><br><span class="line">echo sleep 3s</span><br><span class="line">sleep 1</span><br><span class="line">echo sleep 2s</span><br><span class="line">sleep 1</span><br><span class="line">echo sleep 1s</span><br><span class="line">sleep 1</span><br><span class="line">      </span><br><span class="line">echo &quot;结束进程完成&quot;</span><br><span class="line"></span><br><span class="line">cd $JENKINS_HOME/target</span><br><span class="line"></span><br><span class="line">cp $JENKINS_HOME/Dockerfile $JENKINS_HOME/target</span><br><span class="line"></span><br><span class="line"># 修改文件权限</span><br><span class="line">chmod 755 $JAR_NAME.jar</span><br><span class="line"></span><br><span class="line">echo &quot;看看docker能不能用&quot;</span><br><span class="line">docker -v</span><br><span class="line"></span><br><span class="line">echo &quot;停止容器&quot;</span><br><span class="line"># 停止容器</span><br><span class="line">docker stop springboot</span><br><span class="line"></span><br><span class="line">echo &quot;删除容器&quot;</span><br><span class="line"># 删除容器</span><br><span class="line">docker rm springboot</span><br><span class="line">echo &quot;删除镜像&quot;</span><br><span class="line"># 删除镜像</span><br><span class="line">docker rmi springboot</span><br><span class="line">echo &quot;打包镜像&quot;</span><br><span class="line"># 打包镜像</span><br><span class="line">docker build -t springboot .</span><br><span class="line">echo &quot;运行镜像&quot;</span><br><span class="line"># 运行镜像</span><br><span class="line">docker run -d -p 8081:8081 --name springboot springboot</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;最后保存&#x3D;&#x3D;</p><p>5、立即构建</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220928135743871.png" alt="image-20220928135743871"></p><h3 id="9-27"><a href="#9-27" class="headerlink" title="9.27"></a>9.27</h3><h4 id="Docker离线安装部署"><a href="#Docker离线安装部署" class="headerlink" title="Docker离线安装部署"></a>Docker离线安装部署</h4><p><a href="https://blog.csdn.net/qq_54928486/article/details/127069180">https://blog.csdn.net/qq_54928486/article/details/127069180</a></p><h3 id="9-28"><a href="#9-28" class="headerlink" title="9.28"></a>9.28</h3><h4 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/20171128191813054" alt="img"></p><h4 id="多选"><a href="#多选" class="headerlink" title="多选"></a>多选</h4><p>传值字符串要分割</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220929170654780.png" alt="image-20220929170654780"></p><p>脑子抽抽了，服了。<strong>没搞清楚#$的区别</strong></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20220928182039679.png" alt="image-20220928182039679"></p><h4 id="nacos"><a href="#nacos" class="headerlink" title="nacos"></a>nacos</h4><h3 id="10-8"><a href="#10-8" class="headerlink" title="10.8"></a>10.8</h3><h4 id="gitlab直接拉取代码到idea"><a href="#gitlab直接拉取代码到idea" class="headerlink" title="gitlab直接拉取代码到idea"></a>gitlab直接拉取代码到idea</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221008134359019.png" alt="image-20221008134359019"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221008135038586.png" alt="image-20221008135038586"></p><h4 id="svn拉取文件"><a href="#svn拉取文件" class="headerlink" title="svn拉取文件"></a>svn拉取文件</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221008181718642.png" alt="image-20221008181718642"></p><h4 id="代码生成器使用方法"><a href="#代码生成器使用方法" class="headerlink" title="代码生成器使用方法"></a>代码生成器使用方法</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221008182816400.png" alt="image-20221008182816400"></p><h3 id="10-11"><a href="#10-11" class="headerlink" title="10.11"></a>10.11</h3><h4 id="仿真html文件出错"><a href="#仿真html文件出错" class="headerlink" title="仿真html文件出错"></a>仿真html文件出错</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221011181617883.png" alt="image-20221011181617883"></p><h4 id="Text9000测试"><a href="#Text9000测试" class="headerlink" title="Text9000测试"></a>Text9000测试</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221012093939272.png" alt="image-20221012093939272"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221012093918654.png" alt="image-20221012093918654"></p><p>&#x3D;&#x3D;调试F6 下一步&#x3D;&#x3D;</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221012094153564.png" alt="image-20221012094153564"></p><p>&#x3D;&#x3D;C盘没有权限&#x3D;&#x3D;</p><h3 id="10-28"><a href="#10-28" class="headerlink" title="10.28"></a>10.28</h3><p>ccu控制台接口开发，车票的分页查询，车票的字典的增加，数据库里中英文的切换</p><p><strong>了解业务</strong>，都不知道在干嘛</p><h3 id="10-31"><a href="#10-31" class="headerlink" title="10.31"></a>10.31</h3><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>这周要把自己做了哪些事情记一下，到时候周五开会的时候好说下</p><p>对自己做的事情有什么不理解的，跟我说下</p><p>比如说，这周联调了控制台的哪些页面，这些页面属于哪一类业务</p><p>这个工作任务到时候也可以说下</p><p>联调了哪些页面,页面大致是干什么用</p><h4 id="工作任务，以及作用"><a href="#工作任务，以及作用" class="headerlink" title="工作任务，以及作用"></a>工作任务，以及作用</h4><h5 id="10-31-1"><a href="#10-31-1" class="headerlink" title="10.31"></a>10.31</h5><p>增加车票的字典，作用是为了后台页面的中英文翻译</p><h4 id="11-1"><a href="#11-1" class="headerlink" title="11.1"></a>11.1</h4><p>补充新增的<strong>票种交易手续费参数</strong>的统计文件，ccu，仿真，scu    <strong>0018H-票种交易手续费参数</strong></p><h4 id="11-3"><a href="#11-3" class="headerlink" title="11.3"></a>11.3</h4><p>编写…的分页查询接口</p><table><thead><tr><th><strong>app用户信息     分页查询</strong></th></tr></thead><tbody><tr><td><strong>app用户历史信息     分页查询</strong></td></tr><tr><td><strong>会员卡片绑定     分页查询</strong></td></tr><tr><td><strong>会员信息     分页查询</strong></td></tr><tr><td><strong>会员历史信息     分页查询</strong></td></tr></tbody></table><p>以及还有一些表的改动，我控制台也同步改了一下</p><h4 id="联调页面，以及作用"><a href="#联调页面，以及作用" class="headerlink" title="联调页面，以及作用"></a>联调页面，以及作用</h4><p>车票接口的字典增加</p><p>路网拓扑参数 版本控制 查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/mml3/app/console/logs</span><br></pre></td></tr></table></figure><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221101183947118.png" alt="image-20221101183947118"></p><h3 id="11-4"><a href="#11-4" class="headerlink" title="11.4"></a>11.4</h3><p>学习</p><h2 id="本地搭建svn服务器及TortoiseSVN的基本使用"><a href="#本地搭建svn服务器及TortoiseSVN的基本使用" class="headerlink" title="本地搭建svn服务器及TortoiseSVN的基本使用"></a>本地搭建svn服务器及TortoiseSVN的基本使用</h2><h3 id="一、首先准备三个软件："><a href="#一、首先准备三个软件：" class="headerlink" title="一、首先准备三个软件："></a><strong>一、首先准备三个软件：</strong></h3><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104135627883.png" alt="image-20221104135627883"></p><p><strong style="color:#ff0000;">注意：TortoiseSVN汉化包的版本需要跟TortoiseSVN的版本一致，这里我下错了，找不到相对应的版本就先不用管，我下面有说明</strong></p><p>我这里的汉化包版本应该是<strong>LanguagePack_1.10.5.28651-x64-zh_CN</strong></p><p>软件下载地址：<a href="https://subversion.apache.org/packages.html">http://subversion.apache.org/packages.html</a></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104135906106.png" alt="image-20221104135906106"></p><p><strong>TortoiseSVN汉化包，跟TortoiseSVN同一个页面，往下翻</strong></p><h3 id="二、安装及使用"><a href="#二、安装及使用" class="headerlink" title="二、安装及使用"></a>二、安装及使用</h3><p><strong>安装顺序：</strong></p><p>1．VisualSVN-Server-5.1.1-x64.msi（svn服务端）</p><p>2．TortoiseSVN-1.10.5.28651-x64-svn-1.10.6.msi（svn客户端）</p><p>3．LanguagePack_1.10.5.28651-x64-zh_CN.msi（TortoiseSVN 的汉化包）</p><h4 id="1．VisualSVN-Server-5-1-1-x64-msi（svn服务端）"><a href="#1．VisualSVN-Server-5-1-1-x64-msi（svn服务端）" class="headerlink" title="1．VisualSVN-Server-5.1.1-x64.msi（svn服务端）"></a>1．VisualSVN-Server-5.1.1-x64.msi（svn服务端）</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104140206855.png" alt="image-20221104140206855"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104140224133.png" alt="image-20221104140224133"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104140603157.png" alt="image-20221104140603157"></p><p>&#x3D;&#x3D;根据自己的情况修改配置，不建议勾选https&#x3D;&#x3D;</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104140701315.png" alt="image-20221104140701315"></p><p>刚学的同学可以不用管这个，下一步就是了</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104141353112.png" alt="image-20221104141353112"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104142032504.png" alt="image-20221104142032504"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104142039727.png" alt="image-20221104142039727"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104142449422.png" alt="image-20221104142449422"></p><p>基本上下一步一步走完就行</p><h5 id="一、创建新的存储库"><a href="#一、创建新的存储库" class="headerlink" title="一、创建新的存储库"></a>一、创建新的存储库</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104142648863.png" alt="image-20221104142648863"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104142841550.png" alt="image-20221104142841550"></p><p><strong>新的存储库名称</strong></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104143017470.png" alt="image-20221104143017470"></p><p><strong>创建一个空的存储库</strong></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104143136254.png" alt="image-20221104143136254"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104143401354.png" alt="image-20221104143401354"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104143647861.png" alt="image-20221104143647861"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104143717281.png" alt="image-20221104143717281"></p><p>没有看到东西，那是我们还没设置账号和密码</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104143831287.png" alt="image-20221104143831287"></p><h5 id="二、创建用户Users"><a href="#二、创建用户Users" class="headerlink" title="二、创建用户Users"></a>二、创建用户Users</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104143940079.png" alt="image-20221104143940079"></p><p>用户，密码，重复密码……</p><h5 id="三、添加一个组—groups"><a href="#三、添加一个组—groups" class="headerlink" title="三、添加一个组—groups"></a>三、添加一个组—groups</h5><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104144428240.png" alt="image-20221104144428240"></p><p>选择刚刚添加的users就好</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104144558919.png" alt="image-20221104144558919"></p><h5 id="四、修改一下项目的配置文件"><a href="#四、修改一下项目的配置文件" class="headerlink" title="四、修改一下项目的配置文件"></a>四、修改一下项目的配置文件</h5><p>\Repositories\这个文件地址在安装时配置过</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104145516660.png" alt="image-20221104145516660"></p><p>配置文件在<strong>conf</strong>下</p><p>用记事本打开<strong>svnserve.conf</strong></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104145641698.png" alt="image-20221104145641698"></p><p><strong>去掉#号和空格</strong></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104150005526.png" alt="image-20221104150005526"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104150207135.png" alt="image-20221104150207135"></p><p>用记事本打开<strong>passwd</strong>，如下图所示输入，保存</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104150511309.png" alt="image-20221104150511309"></p><p>最后配置<strong>authz</strong></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104151239269.png" alt="image-20221104151239269"></p><h5 id="五、本地访问"><a href="#五、本地访问" class="headerlink" title="五、本地访问"></a>五、本地访问</h5><p>复制admin的项目的URL到浏览器打开</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104151543470.png" alt="image-20221104151543470"></p><p>之前设置过的，需要授权一下</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104151432412.png" alt="image-20221104151432412"></p><p>就好了</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104151709773.png" alt="image-20221104151709773"></p><p><strong>以上就是svn服务器安装</strong></p><h4 id="2-TortoiseSVN-1-10-5-28651-x64-svn-1-10-6-msi"><a href="#2-TortoiseSVN-1-10-5-28651-x64-svn-1-10-6-msi" class="headerlink" title="2. TortoiseSVN-1.10.5.28651-x64-svn-1.10.6.msi"></a>2. TortoiseSVN-1.10.5.28651-x64-svn-1.10.6.msi</h4><p>这个就没什么好说的了，<strong>一直next 就行</strong></p><p>安装完右键有这两个玩意就行</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104154059409.png" alt="image-20221104154059409"></p><h4 id="使用说明："><a href="#使用说明：" class="headerlink" title="使用说明："></a>使用说明：</h4><h5 id="一、检出"><a href="#一、检出" class="headerlink" title="一、检出"></a>一、检出</h5><p>首先创建一个空文件夹。在空文件夹内右键，选择SVN检出。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104161009029.png" alt="image-20221104161009029"></p><p>还是复制admin的项目的URL，这里只是举个例子，也可以使用其他的项目</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104161158484.png" alt="image-20221104161158484"></p><p>之前创建的账户，密码……</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104161211027.png" alt="image-20221104161211027"></p><p>完成</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104161252359.png" alt="image-20221104161252359"></p><p>这里去看会发现多了一个&#x3D;&#x3D;.svn&#x3D;&#x3D;的隐藏文件，我这里没有其他多余文件，因为我也没有新建任何文件，这里我们可以再试着新建一个文件夹，然后再update一下</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104162100957.png" alt="image-20221104162100957"></p><p>这里我们简单做个示范：</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104162231046.png" alt="image-20221104162231046"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104162257153.png" alt="image-20221104162257153"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104162313382.png" alt="image-20221104162313382"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104162351951.png" alt="image-20221104162351951"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104162635928.png" alt="image-20221104162635928"></p><p>这里就把我们新建的文件拉取下来了，很简单的</p><h5 id="二、导入项目"><a href="#二、导入项目" class="headerlink" title="二、导入项目"></a>二、导入项目</h5><p>继续新建一个文件夹</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104163200942.png" alt="image-20221104163200942"></p><p>还是一如既往的复制admin的项目的URL…    </p><p>&#x3D;&#x3D;<strong>重重叠叠千般意，来来回回还是他</strong>&#x3D;&#x3D;</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104163304828.png" alt="image-20221104163304828"></p><p>这里就看到了我们之前新建的文件</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104163428579.png" alt="image-20221104163428579"></p><p>根据情况来选择，这里我就上传我新建的admin文件夹。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104163915591.png" alt="image-20221104163915591"></p><p>为了不让这个文件夹太单调，或者说不想让他太孤单，我这里加点内容（实际上后面有用）</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104164301801.png" alt="image-20221104164301801"></p><p>好的，我们上传到svn的admin文件夹里</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104164414208.png" alt="image-20221104164414208"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104164507192.png" alt="image-20221104164507192"></p><p>确定看到目录完成就行了</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104164626770.png" alt="image-20221104164626770"></p><p>但是，不要以为导入成功就可以了。你还得重新检出，重新检出的项目才是受SVN控制的，务必记得检出，如果不检出你操作的属于你没有上传之前的文件，当你下次上传可能会出现问题。</p><p>我们回到之前的文件夹，检出</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104164917734.png" alt="image-20221104164917734"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104164949388.png" alt="image-20221104164949388"></p><p><em><a href="javascript:;">perfect</a></em> </p><h5 id="三、关于项目的提交："><a href="#三、关于项目的提交：" class="headerlink" title="三、关于项目的提交："></a>三、关于项目的提交：</h5><p> 绿色表示当前文件没有被修改过（看不见颜色的重启下电脑就好了）。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104165211882.png" alt="image-20221104165211882"></p><p>这里我对1.txt里面进行了修改。你就会发现现在变成了红色，红色表示已修改。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104165412473.png" alt="image-20221104165412473"></p><p><strong>提交：</strong></p><p>选中文件，右键选择提交。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104165555897.png" alt="image-20221104165555897"></p><p>如果是代码的话请务必记得输入提交信息（虽然不输入也能提交，我是怕你被同事骂），提交信息可以方便日后查看。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104165827897.png" alt="image-20221104165827897"></p><p>完成</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104165850709.png" alt="image-20221104165850709"></p><p>提交完毕后，可以发现又恢复到了绿色（还是绿色好）。如果看到还是红色可以退出后在进入就行了。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104170011588.png" alt="image-20221104170011588"></p><h5 id="四、新建文件"><a href="#四、新建文件" class="headerlink" title="四、新建文件"></a>四、新建文件</h5><p>假如现在加入了一个新文件。应该可以看出是蓝色的（但是我没有，可能是电脑没重启）。蓝色表示不属于版本库的未知文件，未知文件是不能提交的。有可能什么都不显示。</p><p>我们可以选择增加把它加入到版本库里面去。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104170608713.png" alt="image-20221104170608713"></p><p>增加完毕后，变成了红色，然后正常提交就没啥问题了</p><h5 id="五、删除文件"><a href="#五、删除文件" class="headerlink" title="五、删除文件"></a>五、删除文件</h5><p>删除文件也应该右键提交，如下。</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104170945273.png" alt="image-20221104170945273"></p><h4 id="3-汉化：-LanguagePack-1-10-5-28651-x64-zh-CN-msi（TortoiseSVN-的汉化包）"><a href="#3-汉化：-LanguagePack-1-10-5-28651-x64-zh-CN-msi（TortoiseSVN-的汉化包）" class="headerlink" title="3. 汉化：  LanguagePack_1.10.5.28651-x64-zh_CN.msi（TortoiseSVN 的汉化包）"></a>3. 汉化：  LanguagePack_1.10.5.28651-x64-zh_CN.msi（TortoiseSVN 的汉化包）</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104160222682.png" alt="image-20221104160222682"></p><p>额……失败了，但是我仔细看了一下，考虑到我是随便在官网下的，没去管版本问题，TortoiseSVN 的汉化包应该是需要版本一致的，我又去官网下一个重新试一下</p><p>官网：<a href="https://osdn.net/projects/tortoisesvn/storage/">https://osdn.net/projects/tortoisesvn/storage/</a></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104154920699.png" alt="image-20221104154920699"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104160050752.png" alt="image-20221104155330759"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104155330759.png" alt="image-20221104155330759"></p><p>这就没什么问题了</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221104154414820.png" alt="image-20221104154414820"></p><h3 id="远程桌面连接"><a href="#远程桌面连接" class="headerlink" title="远程桌面连接"></a>远程桌面连接</h3><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221207173043741.png" alt="image-20221207173043741"></p><p>&#x3D;&#x3D;导入本地资源进入远程服务器&#x3D;&#x3D;</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221207173128690.png" alt="image-20221207173128690"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221207173139605.png" alt="image-20221207173139605"></p><p><strong>导入位置</strong></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20221207173238553.png" alt="image-20221207173238553"></p><h3 id="xxl-job定时任务"><a href="#xxl-job定时任务" class="headerlink" title="xxl-job定时任务"></a>xxl-job定时任务</h3><h4 id="执行器新增——跟spring的服务名字同步"><a href="#执行器新增——跟spring的服务名字同步" class="headerlink" title="执行器新增——跟spring的服务名字同步"></a>执行器新增——跟spring的服务名字同步</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309175033087.png" alt="image-20230309175033087"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309175142071.png" alt="image-20230309175142071"></p><h4 id="nacos服务上新增xxl-job的配置"><a href="#nacos服务上新增xxl-job的配置" class="headerlink" title="nacos服务上新增xxl-job的配置"></a>nacos服务上新增xxl-job的配置</h4><p>注意与文件端口一致</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309175611754.png" alt="image-20230309175611754"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309175346502.png" alt="image-20230309175346502"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309175533030.png" alt="image-20230309175533030"></p><h4 id="新建定时任务、任务新增——跟类名一致"><a href="#新建定时任务、任务新增——跟类名一致" class="headerlink" title="新建定时任务、任务新增——跟类名一致"></a>新建定时任务、任务新增——跟类名一致</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309180648677.png" alt="image-20230309180648677"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309180625865.png" alt="image-20230309180625865"></p><h4 id="注册成功"><a href="#注册成功" class="headerlink" title="注册成功"></a>注册成功</h4><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309181100221.png" alt="image-20230309181100221"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309181414606.png" alt="image-20230309181414606"></p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/image-20230309181447808.png" alt="image-20230309181447808"></p><h3 id="孟买技术总结"><a href="#孟买技术总结" class="headerlink" title="孟买技术总结"></a>孟买技术总结</h3><table><thead><tr><th>技术</th><th>说明</th><th>官网</th></tr></thead><tbody><tr><td>SpringCloud</td><td>SpringCloud</td><td><a href="https://spring.io/projects/spring-cloud">https://spring.io/projects/spring-cloud</a></td></tr><tr><td>MyBatis</td><td>ORM框架</td><td><a href="http://www.mybatis.org/mybatis-3/zh/index.html">http://www.mybatis.org/mybatis-3/zh/index.html</a></td></tr><tr><td>MyBatisGenerator</td><td>数据层代码生成</td><td><a href="http://www.mybatis.org/generator/index.html">http://www.mybatis.org/generator/index.html</a></td></tr><tr><td>PageHelper</td><td>MyBatis物理分页插件</td><td><a href="http://git.oschina.net/free/Mybatis_PageHelper">http://git.oschina.net/free/Mybatis_PageHelper</a></td></tr><tr><td>Redis</td><td>分布式缓存</td><td><a href="https://redis.io/">https://redis.io/</a></td></tr><tr><td>Druid</td><td>数据库连接池</td><td><a href="https://github.com/alibaba/druid">https://github.com/alibaba/druid</a></td></tr><tr><td>OSS</td><td>对象存储</td><td><a href="https://github.com/aliyun/aliyun-oss-java-sdk">https://github.com/aliyun/aliyun-oss-java-sdk</a></td></tr></tbody></table><p>学习的技术点：</p><ol><li>巩固增删改查等一些细节问题，处理报错能力提升</li><li>springcloudalibaba框架更深层次的学习</li><li>svn的学习及其使用</li><li>idea的使用技巧、配置、以及git在idea里的灵活运用</li><li>代码的开发规范更加官方化</li><li>hutool关于Office文档操作（Hutool-poi）—报表开发<a href="https://hutool.cn/docs/#/">入门和安装 (hutool.cn)</a></li><li>xxl-job定时任务的学习及其使用</li><li>学习对业务的理解能力</li><li>服务间通讯——RestTemplate</li></ol><p>总结一下，进步还是有的吧。今天被开导也该反思一下自己的问题</p><ol><li>还是得注重学习，还是不能原地踏步，不然小命不保啊，做总结，想出自己的不足，不了解的。一步一步去进步，一项一项去学习</li><li>开发还是得多注意一下细节，得多想，不要总是犯低级错误，有点致命了</li><li>问问题是真不能不带脑子去问，还是得多用脑子，不要对别人有太强的依赖性，多培养自己解决问题的能力才行，遇到问题的处理逻辑要整理清楚，思路要清晰</li><li>项目上还是得多去了解一下业务，要去理解！！！</li><li>没事的时候，也不要只关注自己做的那一块，要去看看其他东西</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;资料、账号、信息&quot;&gt;&lt;a href=&quot;#资料、账号、信息&quot; class=&quot;headerlink&quot; title=&quot;资料、账号、信息&quot;&gt;&lt;/a&gt;资料、账号、信息&lt;/h1&gt;&lt;h3 id=&quot;git-账号&quot;&gt;&lt;a href=&quot;#git-账号&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>面试详解</title>
    <link href="https://hibernation0814.github.io/2022/08/12/%E9%9D%A2%E8%AF%95%E8%AF%A6%E8%A7%A3/"/>
    <id>https://hibernation0814.github.io/2022/08/12/%E9%9D%A2%E8%AF%95%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-08-12T00:13:03.000Z</published>
    <updated>2022-11-01T07:09:01.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id><a href="#" class="headerlink" title></a></h1><h1 id="我的面试"><a href="#我的面试" class="headerlink" title="我的面试"></a>我的面试</h1><h2 id="第一次"><a href="#第一次" class="headerlink" title="第一次"></a>第一次</h2><h3 id="抽象类应用在哪些方面"><a href="#抽象类应用在哪些方面" class="headerlink" title="抽象类应用在哪些方面"></a>抽象类应用在哪些方面</h3><p>平时会怎么去使用他</p><h3 id="list和map的区别"><a href="#list和map的区别" class="headerlink" title="list和map的区别"></a>list和map的区别</h3><p>不说理论，在什么场景上会使用、或者案例</p><p><img src="https://hibernation0814-hexo.oss-cn-hangzhou.aliyuncs.com/img/53AE7BCCCF363A0920435B87DC0A9527.jpg" alt="img"></p><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><p><strong>java线程start和run的区别</strong></p><ol><li>start() 可以启动一个新线程，run()不能</li><li>start()不能被重复调用，run()可以</li><li>start()中的run代码可以不执行完就继续执行下面的代码，即进行了线程切换。直接调用run方法必须等待其代码全部执行完才能继续执行下面的代码。</li><li>start() 实现了多线程，run()没有实现多线程。</li></ol><h3 id="死锁的规避或解决"><a href="#死锁的规避或解决" class="headerlink" title="死锁的规避或解决"></a>死锁的规避或解决</h3><h3 id="springboot的启动步骤"><a href="#springboot的启动步骤" class="headerlink" title="springboot的启动步骤"></a>springboot的启动步骤</h3><p>Application启动类中的**@SpringBootApplication** 注解和 <strong>SpringApplication.run</strong> 启动方法</p><p>1、创建SpringApplication实例</p><p>2、执行run方法</p><h3 id="在springboot里加一个方法springboot做了一些什么东西"><a href="#在springboot里加一个方法springboot做了一些什么东西" class="headerlink" title="在springboot里加一个方法springboot做了一些什么东西"></a>在springboot里加一个方法springboot做了一些什么东西</h3><p>SpringApplication</p><p>这个类主要做了以下四件事情：</p><p>1、推断应用的类型是普通的项目还是Web项目</p><p>2、查找并加载所有可用初始化器 ， 设置到initializers属性中</p><p>3、找出所有的应用程序监听器，设置到listeners属性中</p><p>4、推断并设置main方法的定义类，找到运行的主类</p><h3 id="服务日志快速查询命令"><a href="#服务日志快速查询命令" class="headerlink" title="服务日志快速查询命令"></a>服务日志快速查询命令</h3><ol><li>cat | grep 命令的使用（单个关键字查询日志）</li><li>tail -f 命令的使用（实时显示）</li></ol><h2 id="华立科技"><a href="#华立科技" class="headerlink" title="华立科技"></a>华立科技</h2><p><strong>总结：(没去了解公司，他侧重点在前端。最后就是没去要微信)</strong></p><h3 id="为什么离开上一家公司？（要注意一下，可能有问题）"><a href="#为什么离开上一家公司？（要注意一下，可能有问题）" class="headerlink" title="为什么离开上一家公司？（要注意一下，可能有问题）"></a>为什么离开上一家公司？（要注意一下，可能有问题）</h3><p>想寻找更大的发展平台，了解到贵公司在各方面都比较符合我对未来的职业规划，我想加入贵公司，寻求更好的发展。</p><h3 id="js闭包"><a href="#js闭包" class="headerlink" title="js闭包"></a>js闭包</h3><h2 id="风石健康"><a href="#风石健康" class="headerlink" title="风石健康"></a>风石健康</h2><h3 id="yaml和properties"><a href="#yaml和properties" class="headerlink" title="yaml和properties"></a>yaml和properties</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server.port=8081</span><br><span class="line"></span><br><span class="line">#yaml配置端口</span><br><span class="line">server:</span><br><span class="line">  port: 8081</span><br></pre></td></tr></table></figure><h3 id="list和json的写法"><a href="#list和json的写法" class="headerlink" title="list和json的写法"></a>list和json的写法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;data&quot; :[&#123; //对象中嵌套数组，数组是返回的数据，</span><br><span class="line">&quot;id&quot; : 1 ,</span><br><span class="line">&quot;name&quot; : &quot;xiaohong&quot;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">&quot;id&quot; : 2,</span><br><span class="line">&quot;name&quot; : &quot;xiaoming&quot;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="蜂电科技"><a href="#蜂电科技" class="headerlink" title="蜂电科技"></a>蜂电科技</h2><p>重点是项目，不够了解项目，支付功能经常被问啊,</p><p>支付后的开票功能，</p><h3 id="微信小程序调用支付通道的手续费"><a href="#微信小程序调用支付通道的手续费" class="headerlink" title="微信小程序调用支付通道的手续费"></a>微信小程序调用支付通道的手续费</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">微信小程序只能对接的是微信支付（无法对接支付宝），一般常见的手续费是千分之2～千分之6</span><br><span class="line"></span><br><span class="line">自己去申请微信支付只能申请到千分之6，我们作为支付服务商可以申请最低千分之2的费率</span><br><span class="line"></span><br><span class="line">只有学校/公益等等行业可以申请到0费率</span><br><span class="line"></span><br><span class="line">凡是使用了微信支付通道来收款的应用，无论是网站，app，还是小程序； 都会收取一个手续费</span><br><span class="line"></span><br><span class="line">——————————————————————————————————————————</span><br><span class="line"></span><br><span class="line">假如你的费率是千6，小程序里面收款了1000元，微信支付官方立即扣除6元的手续费</span><br><span class="line"></span><br><span class="line">自己实际到账的是994元，994元就可以提现出去绑定的银行卡了，不会再收取其他的手续</span><br></pre></td></tr></table></figure><h3 id="mqtt协议"><a href="#mqtt协议" class="headerlink" title="mqtt协议"></a>mqtt协议</h3><h3 id="微信小程序调用支付宝的支付接口"><a href="#微信小程序调用支付宝的支付接口" class="headerlink" title="微信小程序调用支付宝的支付接口"></a>微信小程序调用支付宝的支付接口</h3><p>查询资料发现，大多数的答案是：微信与支付宝属于互相竞争的关系，是两个不同的支付平台，目前是不支持互相通用的。微信小程序里面的程序软件属于内嵌于微信的服务，支持微信支付，但不能使用支付宝支付。也就是说：<br>①在小程序中生成支付宝二维码的方式，不可行<br>②在小程序中内嵌H5网页后调用支付宝支付接口，也不可行，由于支付协议<br>那么我通过诱导的方式直接在浏览器使用支付呢？也就是：<br>③通过点击某个链接直接跳出小程序自动跳转到系统浏览器的方式，也不可行，原因：<br>微信小程序没办法直接跳转打开app、网址、手机浏览器，但是可以直接打开其他的小程序并跳转到指定的小程序页面<br>微信公众号可以直接打开app或app指定页面，可以直接打开手机浏览器并跳转指定网址，可以打开小程序或进入小程序指定页面。<br>但是，我就是想通过某种方式实现小程序通过支付宝支付呢？（嗯 其实也不是我轴了 公司要求）哪怕是曲里拐弯儿的方式，所以：<br>④<strong>通过诱导的方式在小程序中生成你需要在浏览器中打开使用支付页面的链接地址，诱导用户手动复制网址并手动切换到系统浏览器中使用</strong>。我自己的这个链接有公司小程序接口的前提下弄的，比如说<a href="http://xxxx.com/xxxx.aspx?%E5%8F%82%E6%95%B0=xxxx%EF%BC%8C%E5%A4%8D%E5%88%B6%E8%BF%99%E4%B8%AA%E9%93%BE%E6%8E%A5%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BF%A1%E6%81%AF%E5%B1%95%E7%A4%BA%E7%9A%84%E9%A1%B5%E9%9D%A2%EF%BC%8C%E5%9C%A8%E8%BF%99%E4%B8%AA%E9%A1%B5%E9%9D%A2%E4%B8%8A%E6%9C%89%E4%B8%80%E4%B8%AA%E6%8C%89%E9%92%AE%EF%BC%8C%E9%80%9A%E8%BF%87%E8%BF%99%E4%B8%AA%E6%8C%89%E9%92%AE%E5%86%8D%E5%8E%BB%E8%AF%B7%E6%B1%82%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98%E7%9A%84%E6%8E%A5%E5%8F%A3%E3%80%82%E7%B1%BB%E4%BC%BC%E4%BA%8E%E5%A6%82%E5%9B%BE%EF%BC%9A%EF%BC%89">http://xxxx.com/xxxx.aspx?参数=xxxx，复制这个链接到浏览器打开是一个信息展示的页面，在这个页面上有一个按钮，通过这个按钮再去请求支付宝支付的接口。类似于如图：）</a><br><img src="https://img-blog.csdnimg.cn/2019121915290132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1NDIyOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><a href="https://blog.csdn.net/weixin_43554228/article/details/103453578?ops_request_misc=&request_id=&biz_id=102&utm_term=%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E6%94%AF%E4%BB%98%E5%AE%9D%E7%9A%84%E6%94%AF%E4%BB%98%E6%8E%A5%E5%8F%A3&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-103453578.142%5Ev44%5Epc_rank_34_default_23&spm=1018.2226.3001.4187">https://blog.csdn.net/weixin_43554228&#x2F;article&#x2F;details&#x2F;103453578?ops_request_misc&#x3D;&amp;request_id&#x3D;&amp;biz_id&#x3D;102&amp;utm_term&#x3D;%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E6%94%AF%E4%BB%98%E5%AE%9D%E7%9A%84%E6%94%AF%E4%BB%98%E6%8E%A5%E5%8F%A3&amp;utm_medium&#x3D;distribute.pc_search_result.none-task-blog-2<del>all</del>sobaiduweb~default-0-103453578.142^v44^pc_rank_34_default_23&amp;spm&#x3D;1018.2226.3001.4187</a></p><h2 id="四方精创"><a href="#四方精创" class="headerlink" title="四方精创"></a>四方精创</h2><h3 id="mysql函数截取字符串"><a href="#mysql函数截取字符串" class="headerlink" title="mysql函数截取字符串"></a>mysql函数截取字符串</h3><h3 id="创建线程有哪几种方式"><a href="#创建线程有哪几种方式" class="headerlink" title="创建线程有哪几种方式"></a>创建线程有哪几种方式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">一、继承Thread类创建线程类</span><br><span class="line">（1）定义Thread类的子类，并重写该类的run方法，该run方法的方法体就代表了线程要完成的任务。因此把run()方法称为执行体。</span><br><span class="line">（2）创建Thread子类的实例，即创建了线程对象。</span><br><span class="line">（3）调用线程对象的start()方法来启动该线程。</span><br><span class="line">二、通过Runnable接口创建线程类</span><br><span class="line">（1）定义runnable接口的实现类，并重写该接口的run()方法，该run()方法的方法体同样是该线程的线程执行体。</span><br><span class="line">（2）创建 Runnable实现类的实例，并依此实例作为Thread的target来创建Thread对象，该Thread对象才是真正的线程对象。</span><br><span class="line">（3）调用线程对象的start()方法来启动该线程。</span><br><span class="line">三、通过Callable和Future创建线程</span><br><span class="line">（1）创建Callable接口的实现类，并实现call()方法，该call()方法将作为线程执行体，并且有返回值。</span><br><span class="line">（2）创建Callable实现类的实例，使用FutureTask类来包装Callable对象，该FutureTask对象封装了该Callable对象的call()方法的返回值。</span><br><span class="line">（3）使用FutureTask对象作为Thread对象的target创建并启动新线程。</span><br><span class="line">（4）调用FutureTask对象的get()方法来获得子线程执行结束后的返回值</span><br></pre></td></tr></table></figure><h3 id="SQL去重"><a href="#SQL去重" class="headerlink" title="SQL去重"></a>SQL去重</h3><p><strong>distinct</strong>去重</p><p><strong>group by</strong>去重</p><p>row_number() over (parttion by 分组列 order by 排序列)</p><h3 id="SQL数据排序"><a href="#SQL数据排序" class="headerlink" title="SQL数据排序"></a>SQL数据排序</h3><h3 id="Mysql内连接和外连接的区别"><a href="#Mysql内连接和外连接的区别" class="headerlink" title="Mysql内连接和外连接的区别"></a>Mysql内连接和外连接的区别</h3><ol><li><h4 id="MySQL中的外连接和内连接"><a href="#MySQL中的外连接和内连接" class="headerlink" title="MySQL中的外连接和内连接"></a>MySQL中的外连接和内连接</h4></li><li><p><strong>内连接</strong></p></li><li><p>&#96;&#96;&#96;<br>内连接：指连接结果仅包含符合连接条件的行，参与连接的两个表都应该符合连接条件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. **外连接**</span><br><span class="line"></span><br><span class="line">5. ```</span><br><span class="line">   外连接：连接结果不仅包含符合连接条件的行同时也包含自身不符合条件的行。包括左外连接、右外连接和全外连接。</span><br></pre></td></tr></table></figure><ol><li>左（外）连接 left join<ul><li>左表的记录将会全部表示出来，而右表只会显示符合搜索条件的记录。</li></ul></li><li>右（外）连接 right join<ul><li>右表的记录将会全部表示出来，而左表只会显示符合搜索条件的记录。</li></ul></li></ol></li></ol><h3 id="MySQL的基础架构"><a href="#MySQL的基础架构" class="headerlink" title="MySQL的基础架构"></a>MySQL的基础架构</h3><h2 id="得淼"><a href="#得淼" class="headerlink" title="得淼"></a>得淼</h2><p>是否熟悉表结构的设计</p><h3 id="秒杀"><a href="#秒杀" class="headerlink" title="秒杀"></a>秒杀</h3><p>特点：<strong>时间极短</strong>、 <strong>瞬间用户量大</strong>。</p><p>问题：</p><ul><li><p><strong>缓存雪崩</strong>，<strong>缓存击穿</strong>，<strong>缓存穿透</strong></p></li><li><p><strong>超卖</strong></p></li><li><p><strong>恶意请求</strong></p></li><li><p><strong>链接暴露</strong></p></li><li><h5 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h5></li></ul><h5 id="简单说个解决办法："><a href="#简单说个解决办法：" class="headerlink" title="简单说个解决办法："></a>简单说个解决办法：</h5><p><strong>限流：</strong></p><p>限流这里我觉得应该分为<strong>前端限流</strong>和<strong>后端限流</strong>。</p><p><strong>前端：</strong>一般都是点击一下或者两下然后几秒之后才可以继续点击</p><p><strong>后端：</strong>产品卖光了，return了一个false，前端直接秒杀结束</p><p>阿里的Sentinel</p><h5 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a><strong>Redis</strong></h5><p><strong>提前把商品的库存加载到Redis中</strong>，让整个流程都在Redis里面去做，然后等秒杀结束了，再异步的去修改库存就好了。</p><h2 id="联物"><a href="#联物" class="headerlink" title="联物"></a>联物</h2><h3 id="项目是否上线"><a href="#项目是否上线" class="headerlink" title="项目是否上线"></a>项目是否上线</h3><p>纯后台就说上线了，已经在使用</p><h3 id="HTTP-8种请求类型"><a href="#HTTP-8种请求类型" class="headerlink" title="HTTP-8种请求类型"></a>HTTP-8种请求类型</h3><p><strong>GET请求</strong></p><p><strong>POST请求</strong></p><p><strong>PUT请求</strong></p><p><strong>DELETE请求</strong></p><p><strong>trace请求</strong></p><p><strong>head请求</strong></p><p><strong>options</strong></p><p><strong>connect</strong></p><h3 id="vue标签"><a href="#vue标签" class="headerlink" title="vue标签"></a>vue标签</h3><ol><li><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3></li><li><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3></li><li><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3></li><li><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3></li></ol><h2 id="9-8线上"><a href="#9-8线上" class="headerlink" title="9.8线上"></a>9.8线上</h2><h3 id="JDK和JRE的区别"><a href="#JDK和JRE的区别" class="headerlink" title="JDK和JRE的区别"></a>JDK和JRE的区别</h3><p>JDK全称为Java Development Kit，顾名思义是java开发工具包，是程序员使用java语言编写java程序所需的开发工具包。</p><p>JRE全称为Java Runtime <a href="https://so.csdn.net/so/search?q=Environment&spm=1001.2101.3001.7020">Environment</a>，顾名思义是java运行时的环境，包含了java虚拟机，java基础类库，是使用java语言编写的程序运行所需要的软件环境。</p><h3 id="bean注解的使用方法"><a href="#bean注解的使用方法" class="headerlink" title="bean注解的使用方法"></a>bean注解的使用方法</h3><h3 id="数组有没有length-方法？String有没有length-）方法？"><a href="#数组有没有length-方法？String有没有length-）方法？" class="headerlink" title="数组有没有length()方法？String有没有length(）方法？"></a>数组有没有length()方法？String有没有length(）方法？</h3><p><a href="https://so.csdn.net/so/search?q=%E6%95%B0%E7%BB%84&spm=1001.2101.3001.7020">数组</a>是没有length（）这个方法的，有length这个属性，可以计算数组的长度</p><p>String是有length（）这个方法的，用来计算<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020">字符串</a>的长度。</p><h2 id="神州灵云"><a href="#神州灵云" class="headerlink" title="神州灵云"></a>神州灵云</h2><h3 id="list的写法"><a href="#list的写法" class="headerlink" title="list的写法"></a>list的写法</h3><p>[{name&#x3D;jim,age&#x3D;23},{……}]</p><h3 id="hashmap底层结构"><a href="#hashmap底层结构" class="headerlink" title="hashmap底层结构"></a>hashmap底层结构</h3><h3 id="为什么两个String类型的数据，它们的hashcode-相同，但是-x3D-x3D-的结果为false"><a href="#为什么两个String类型的数据，它们的hashcode-相同，但是-x3D-x3D-的结果为false" class="headerlink" title="为什么两个String类型的数据，它们的hashcode()相同，但是&#x3D;&#x3D;的结果为false"></a>为什么两个String类型的数据，它们的hashcode()相同，但是&#x3D;&#x3D;的结果为false</h3><p>String重写了hashcode()方法，<a href="https://so.csdn.net/so/search?q=String%E7%B1%BB&spm=1001.2101.3001.7020">String类</a>型的<strong>hash值是根据字符串的内容来决定的</strong>，并不是内存地址，只要两个String类型的字符串内容一致，那么两者的hashcode就相同。</p><h3 id="数组和集合的区别"><a href="#数组和集合的区别" class="headerlink" title="数组和集合的区别"></a>数组和集合的区别</h3><p>一、数组声明了类型，集合不会</p><p>二、数组静态，大小不可变。集合可以动态扩展</p><p>三、数组存放的类型只能一种，</p><h1 id="——————————————————————"><a href="#——————————————————————" class="headerlink" title="——————————————————————"></a>——————————————————————</h1><h4 id="ArrayList和LinkedList的区别？"><a href="#ArrayList和LinkedList的区别？" class="headerlink" title="ArrayList和LinkedList的区别？"></a>ArrayList和LinkedList的区别？</h4><table><thead><tr><th></th><th>优点</th><th>缺点</th><th>适用场景</th></tr></thead><tbody><tr><td>ArrayList（数组）</td><td>读取数据快</td><td>数据复杂，删除成本大，需要重新排序</td><td>不随机访问数据时适用</td></tr><tr><td>LinkedList（链表）</td><td>插入，添加，删除效率高，因为不需要更新索引</td><td>内存需求大</td><td>更多插入和删除，更少读取数据</td></tr></tbody></table><h4 id="重写和重载的区别？"><a href="#重写和重载的区别？" class="headerlink" title="重写和重载的区别？"></a>重写和重载的区别？</h4><p><strong>概念</strong></p><p>重写通常来说就是覆盖，重新对虚函数度重新编写</p><p>重载指的是不用的函数用相同的函数名，参数，个数，类型不同</p><p><strong>类的属关系上来看</strong></p><p>重写：垂直关系，只发生在父类与子类之间的关系</p><p>重载：平面关系，在同一个类之间的关系</p><h4 id="int和Integer的区别"><a href="#int和Integer的区别" class="headerlink" title="int和Integer的区别"></a>int和Integer的区别</h4><p>int是普通类型Integer是封装类</p><p>int初始值是0Integer初始值是null</p><p>int直接存储数据Integer需要实例化对象，指向对象地址</p><h4 id="String-StringBuffer-StringBuilder区别"><a href="#String-StringBuffer-StringBuilder区别" class="headerlink" title="String,StringBuffer,StringBuilder区别?"></a>String,StringBuffer,StringBuilder区别?</h4><table><thead><tr><th>项</th><th>String</th><th>StringBuffer</th><th>StringBuilder</th></tr></thead><tbody><tr><td>可变性</td><td>不可变。原因：value数组是final类型。因为不可变，所以每次操作生成新对象。</td><td>可变。原因：其父类（AbstractStringBuilder）的value数组不是final类型</td><td>可变。原因：其父类（AbstractStringBuilder）的value数组不是final类型</td></tr><tr><td>线程安全性</td><td>线程安全。原因：value数组是final类型</td><td>原因：其父类（AbstractStringBuilder）的value数组不是final类型线程安全。原因：方法都用了synchronized</td><td>线程不安全</td></tr></tbody></table><h4 id="static的5种用法"><a href="#static的5种用法" class="headerlink" title="static的5种用法"></a>static的5种用法</h4><ol><li>修饰成员属性</li><li>修饰成员方法</li><li>修饰代码块</li><li>修饰内部类</li><li>静态导包</li></ol><h4 id="JDK1-8-新特性"><a href="#JDK1-8-新特性" class="headerlink" title="JDK1.8 新特性"></a>JDK1.8 新特性</h4><ul><li><strong>Lambda表达式</strong></li><li><strong>函数式接口</strong></li><li>*<strong>方法引用和构造器调用</strong></li><li><strong>Stream API</strong></li><li><strong>接口中的默认方法和静态方法</strong></li><li><strong>新时间日期API</strong></li></ul><h4 id="HashMap、TreeMap、LinkedHashMap之间的区别"><a href="#HashMap、TreeMap、LinkedHashMap之间的区别" class="headerlink" title="HashMap、TreeMap、LinkedHashMap之间的区别?"></a>HashMap、<a href="https://so.csdn.net/so/search?q=TreeMap&spm=1001.2101.3001.7020">TreeMap</a>、LinkedHashMap之间的区别?</h4><p><strong>相同点</strong></p><ul><li>都属于Map；<ul><li>Map 主要用于存储键(key)值(value)对，根据键得到值，因此键不允许键重复，但允许值重复。</li></ul></li><li>都是线程不安全的</li></ul><table><thead><tr><th></th><th><strong>HashMap</strong></th><th><em>TreeMap</em></th><th>LinkedHashMap</th></tr></thead><tbody><tr><td><strong>按插入顺序存放</strong></td><td>不支持</td><td>不支持。</td><td><strong>支持。</strong>遍历时，按插入的顺序出结果。</td></tr><tr><td><strong>按key排序</strong></td><td>不支持。按照hashCode进行输出。</td><td><strong>支持</strong>。默认按key升序排序。可用Comparator自定义排序。用Iterator 遍历TreeMap时，结果是排过序的。</td><td>不支持。</td></tr><tr><td><strong>数据结构</strong></td><td>数组 + 链表 + 红黑树（put和get操作，基本可以达到常数时间的性能）</td><td>红黑树。（get或put操作的时间复杂度是O(log(n))）</td><td>HashMap + 双向链表此类是HashMap的子类。</td></tr><tr><td><strong>null</strong></td><td>只允许一条记录的key值为Null(多条会覆盖)；允许多条记录的Value为 Null。</td><td>不允许key的值为null</td><td>key和value均允许为null</td></tr></tbody></table><h5 id="HashMap和Hashtable的区别-绝对经典"><a href="#HashMap和Hashtable的区别-绝对经典" class="headerlink" title="HashMap和Hashtable的区别(绝对经典)"></a>HashMap和Hashtable的区别(绝对经典)</h5><p><strong>相同点</strong></p><p>都实现了map，Cloneable（可克隆），Serializable（可序列化）三个接口</p><p><strong>不同点</strong></p><ol><li>底层数据结构不同，jdk1.7都是数组加链表，1.8HashMap加入了红黑树</li><li>Hashtable不允许键值为空，HashMap允许一条</li><li>实现方式不同：Hashtable 继承的是 Dictionary类，而 HashMap 继承的是 AbstractMap 类。</li></ol><h4 id="单例模式有八种方式："><a href="#单例模式有八种方式：" class="headerlink" title="单例模式有八种方式："></a>单例模式有八种方式：</h4><ol><li>饿汉式(静态常量)</li><li>饿汉式（静态代码块）</li><li>懒汉式(线程不安全)</li><li>懒汉式(线程安全，同步方法)</li><li>懒汉式(线程安全，同步代码块)</li><li>双重检查</li><li>静态内部类</li><li>枚举</li></ol><h4 id="什么是值传递-什么是引用传递"><a href="#什么是值传递-什么是引用传递" class="headerlink" title="什么是值传递?什么是引用传递?"></a>什么是值传递?什么是引用传递?</h4><p>值传递：传变量的值，不会改变方法外变量的值</p><p>引用传递：传的对象地址，会改变对象本身的值</p><h4 id="java性能优化"><a href="#java性能优化" class="headerlink" title="java性能优化"></a>java性能优化</h4><ol><li>尽量指定类、方法的final修饰符</li><li>代码尽量重用</li><li>及时关闭流</li><li>尽量使用局部变量</li><li>减少对变量的重复计算</li><li>不要再循环中使用try</li><li>尽量采用懒加载的策略</li></ol><h4 id="java反射"><a href="#java反射" class="headerlink" title="java反射"></a>java反射</h4><p>作用：增加代码灵活性，避免程序死在代码里</p><p>优点：</p><ol><li>提高了代码的灵活性和扩展性</li><li>代码简洁，提高代码的复用性，外部调用方便</li></ol><p>缺点：性能问题、使用反射会模糊程序内部逻辑，安全限制，内部暴露</p><h4 id="线程池的原理"><a href="#线程池的原理" class="headerlink" title="线程池的原理"></a>线程池的原理</h4><ol><li><p>提交任务，线程池会根据corePoolSize大小创建若干数量线程执行任务</p></li><li><p>超过corePoolSize数量，后续任务阻塞队列，阻塞排队</p></li><li><p>阻塞队列也满了之后，创建额外线程，执行任务，超过额外时间，销毁额外线程</p></li><li><p>线程池满了，拒绝策略</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1gkl2qg1iczj31cy0kcad1.jpg"></p></li></ol><h4 id="线程七大核心参数"><a href="#线程七大核心参数" class="headerlink" title="线程七大核心参数"></a>线程七大核心参数</h4><blockquote><p>corePoolSize：线程池中常驻核心线程数</p><p>maximumPoolSize：线程池能够容纳同时执行的最大线程数，此值必须大于1</p><p>keepAliveTime：多余空闲线程的存活时间。当前线程池数量超过corePoolSize时，当空闲时间达到keepAliveTime时，多余空闲线程会被销毁直到剩下corePoolSize为止。</p><p>unit：keepAliveTime的单位</p><p>workQueue：里面放了被提交但是尚未执行的任务</p><p>threadFactory：表示线程池中工作线程的线程工厂，用于创建线程</p><p>handler：拒绝策略，当队列满了并且工作线程大于等于线程池的最大线程数（maximumPoolSize）时，对任务的拒绝方式。</p></blockquote><p>原文链接：<a href="https://blog.csdn.net/qq_50652600/article/details/121212661">https://blog.csdn.net/qq_50652600/article/details/121212661</a></p><h4 id="tomcat7和tomcat8的区别"><a href="#tomcat7和tomcat8的区别" class="headerlink" title="tomcat7和tomcat8的区别"></a>tomcat7和tomcat8的区别</h4><p>配置文件：tomcat8更贴心，给出明确的启动提示输出</p><p>请求的响应状态值：8——success，7——ok</p><p><strong>性能方面：</strong></p><p>tomcat8的吞吐量和响应时间均优于tomcat7</p><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h4 id="设计数据库的三大范式？"><a href="#设计数据库的三大范式？" class="headerlink" title="设计数据库的三大范式？"></a>设计数据库的三大范式？</h4><p>通俗解释</p><ol><li>字段不可分</li><li>非主键字段依赖主键</li><li>非主键字段不能相互依赖</li></ol><h4 id="truncate和drop以及delete的区别"><a href="#truncate和drop以及delete的区别" class="headerlink" title="truncate和drop以及delete的区别"></a>truncate和drop以及delete的区别</h4><p>truncate：删除表内容，不删除表结构，释放空间</p><p>drop：删除数据库</p><p>delete：删除表内容，不删除表结构，不释放空间</p><h4 id="数据库优化经验"><a href="#数据库优化经验" class="headerlink" title="数据库优化经验"></a>数据库优化经验</h4><ol><li><p>从jdbc来说用PreparedStatement 一般来说比Statement性能高</p></li><li><p>外键会影响插入和删除的性能</p></li><li><p>表中允许适当的冗余，适度非凡三大范式，来获得更好的性能</p></li><li><p>sql语句全部大写，增强数据库编译效率</p></li><li><p>索引会增强查询性能</p></li><li><p>选择有效率的表名顺序</p></li><li><p>SELECT避免使用*</p></li></ol><h4 id="什么是事务？事务特性？有哪些隔离级别？"><a href="#什么是事务？事务特性？有哪些隔离级别？" class="headerlink" title="什么是事务？事务特性？有哪些隔离级别？"></a>什么是事务？事务特性？有哪些隔离级别？</h4><p>事务（transaction）：是数据库操作的最小工作单位，是单个逻辑工作单元执行的一系列操作</p><p>属性（ACID）：</p><ol><li><strong>一致性</strong>，事务中的诸多操作，<strong>要么都做，要么都不做</strong></li><li><strong>原子性</strong>，使数据库从一个一致性状态到另一个一致性状态</li><li><strong>隔离性</strong>，一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰</li><li><strong>持久性</strong>，这个事务一旦提交，数据库中数据的改变应该是永久性的</li></ol><p>隔离级别分为：Read Uncommitted(读未提交)、Read Committed(读提交)、Repeatable Read(可以重复读)、Serializable(序列化)这4种级别</p><h4 id="索引的好处？"><a href="#索引的好处？" class="headerlink" title="索引的好处？"></a>索引的好处？</h4><p><strong>索引是数据库表中一列或多列的值进行排序的一种结构，使用索引可以快速访问数据库表中特定的数据</strong></p><p>大大提高了系统性能</p><ol><li>加快了检索速度</li><li>通过创建唯一索引，保证数据库每一行数据的唯一性</li><li>加速表连接</li><li>减少分组排序时间</li></ol><h4 id="内外连接的区别"><a href="#内外连接的区别" class="headerlink" title="内外连接的区别"></a>内外连接的区别</h4><p>内：两个表的交集</p><p>外：两个表的交集+主表中不符合连接条件只符合查询条件的数据行</p><h4 id="什么是存储过程？"><a href="#什么是存储过程？" class="headerlink" title="什么是存储过程？"></a>什么是存储过程？</h4><p>存储过程是为了完成特定功能的<a href="https://so.csdn.net/so/search?q=SQL%E8%AF%AD%E5%8F%A5&spm=1001.2101.3001.7020">SQL语句</a>集合，存储在数据库中，用户通过指定存储过程的名称并给出参数来执行。</p><h4 id="mvcc是什么？"><a href="#mvcc是什么？" class="headerlink" title="mvcc是什么？"></a>mvcc是什么？</h4><p>它是MySQL中的提高性能的一种方式，<strong>配合Undo log 和版本链，替代锁</strong>，让不同事物的读-写、写-读操作可以<a href="https://so.csdn.net/so/search?q=%E5%B9%B6%E5%8F%91&spm=1001.2101.3001.7020">并发</a>的执行，从而提升系统的性能。</p><p>MVCC 在 MySQL InnoDB 中的实现主要是为了提高数据库并发性能。一般是在使用<strong>读已提交</strong>（PEAD COMMITTED）和<strong>可重复读</strong>（REPEATABLE READ）隔离级别的事务中实现。</p><p><strong>MVCC的优点：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MVCC在MySQL InnoDB中的实现主要是为了提高数据库的并发性能，用更好的方式去处理读-写或写-读之间的冲突，也能做到不加锁，非阻塞并发读，提高了数据库并发读写的性能。</span><br><span class="line">MVCC还可以解决脏读，幻读，不可重复读等事务隔离问题。但它还不能解决更新丢失的问题。</span><br></pre></td></tr></table></figure><h1 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h1><h4 id="Mybatis和Mybatis-plus区别"><a href="#Mybatis和Mybatis-plus区别" class="headerlink" title="Mybatis和Mybatis plus区别"></a>Mybatis和Mybatis plus区别</h4><p>mybatis：</p><ol><li>sql全部自己写</li><li>手动解析实体关系映射转换为mybatis内部对象注入容器</li><li>不支持lambda形式调用</li></ol><p>mybatis plus：</p><ol><li>有强大的条件构造器</li><li>内置Mapper，通用的Service，少量配置即可实现大量的curd操作</li><li>支持lambda形式调用</li><li>自动解析实体关系映射转换为mybatis内部对象注入容器</li></ol><h4 id="mybatis的作用"><a href="#mybatis的作用" class="headerlink" title="mybatis的作用"></a>mybatis的作用</h4><ol><li>简化curd</li><li>乐观锁</li><li>逻辑删除</li><li>代码生成</li><li>高级查询</li><li>数据填充</li></ol><h4 id="动态SQL标签"><a href="#动态SQL标签" class="headerlink" title="动态SQL标签"></a>动态SQL标签</h4><ol><li>if</li><li>where</li><li>foreach</li><li>set</li><li>when</li></ol><h4 id="mybatis的一级缓存和二级缓存"><a href="#mybatis的一级缓存和二级缓存" class="headerlink" title="mybatis的一级缓存和二级缓存"></a>mybatis的一级缓存和二级缓存</h4><p>一级缓存作用域是sqlsession级别的，执行sql查询，第一次查询数据在数据库并写到缓存中，第二次在一级缓存中取</p><p>清空：一般在缓存时执行commit操作一级缓存就会清空，避免脏读</p><p>二级缓存他指的是mybatis中SqlSessionFactory对象缓存</p><h4 id="mybatis如何返回增加时的主键？"><a href="#mybatis如何返回增加时的主键？" class="headerlink" title="mybatis如何返回增加时的主键？"></a>mybatis如何返回增加时的主键？</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useGeneratedKeys=“true” keyProperty=“对应的主键的对象”</span><br></pre></td></tr></table></figure><h4 id="和-的区别"><a href="#和-的区别" class="headerlink" title="#{}和${}的区别"></a>#{}和${}的区别</h4><p>#{}是预编译语句，特点：会主动给String加上单引号，可以很大程度的防止SQL注入</p><p>${}只是单纯的拼接，解析后是什么就是什么，特点：有很大的SQL注入隐患，在order by时可以使用</p><h4 id="分页插件的基本原理"><a href="#分页插件的基本原理" class="headerlink" title="分页插件的基本原理:"></a><strong>分页插件的基本原理:</strong></h4><p>使用Mybatis提供的<strong>插件接口</strong>，实现自定义插件</p><p>在插件的拦截方法内<strong>拦截待执行的SQL，然后重写SQLlimit</strong></p><p>根据方言，添加对应的<strong>物理分页语句</strong>和<strong>物理分页参数</strong></p><h4 id="mybatis-四大核心接口对象"><a href="#mybatis-四大核心接口对象" class="headerlink" title="mybatis 四大核心接口对象"></a>mybatis 四大核心接口对象</h4><ol><li>执行器Executor，执行器负责整个SQL执行过程的总体控制。</li><li>语句处理器StatementHandler，语句处理器负责和JDBC层具体交互，包括prepare语句，执行语句，以及调用ParameterHandler.parameterize()设置参数。</li><li>参数处理器ParameterHandler，参数处理器负责PreparedStatement入参的具体设置。</li><li>结果集处理器ResultSetHandler，结果处理器负责将JDBC查询结果映射到java对象。</li></ol><h1 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h1><h2 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h2><h3 id="Spring："><a href="#Spring：" class="headerlink" title="Spring："></a>Spring：</h3><p>是一个开源框架，可以接管web层，dao层，业务层，持久层的组件，并且可以配置bean，和维护bean与bean之间的关系。核心是IOC（控制反转），AOP（面向切面），是一个分层的轻量级开源框架。</p><h3 id="SpringMVC："><a href="#SpringMVC：" class="headerlink" title="SpringMVC："></a>SpringMVC：</h3><p>SpringMvc是一种web层框架，主要用于代替servlet</p><h3 id="SpringBoot："><a href="#SpringBoot：" class="headerlink" title="SpringBoot："></a>SpringBoot：</h3><p>是spring的拓展，同时延续了spring的和核心ioc，aop，简化了应用的开发和部署。SpringBoot就是为了简化Spring应用的的创建、运行、调试、和部署而出现的。boot提供了很多依赖包，让我们可以做到专注spring的开发，而无需过多关注xml文件</p><h4 id="SpringBoot常见启动器："><a href="#SpringBoot常见启动器：" class="headerlink" title="SpringBoot常见启动器："></a>SpringBoot常见启动器：</h4><p>web、thymeleaf、shiro、security、shiro&amp;thymeleaf、mybatis</p><h4 id="XXL-JOB是什么"><a href="#XXL-JOB是什么" class="headerlink" title="XXL-JOB是什么"></a>XXL-JOB是什么</h4><p>XXL-JOB是一个<a href="https://so.csdn.net/so/search?q=%E5%88%86%E5%B8%83%E5%BC%8F&spm=1001.2101.3001.7020">分布式</a>任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。</p><h3 id="SpringCloud："><a href="#SpringCloud：" class="headerlink" title="SpringCloud："></a>SpringCloud：</h3><p>业界没有统一的定义标准，核心是一站式应用，根据业务区分成一个一个服务，实现彻底耦合，每个服务做每个服务的事情，能够单独启动或销毁，拥有自己独立的数据库</p><h4 id="Spring的核心？"><a href="#Spring的核心？" class="headerlink" title="Spring的核心？"></a>Spring的核心？</h4><p>spring是一个开源框架，<strong>是一个生态，同时是整个生态中的基石</strong></p><p>mvc、boot、cloud…都是以spring为基石来进行开发的，或者说都是在spring上做的延申或者拓展</p><p>自觉维护对象的创建，对象的销毁，交给容器管理我们只需做好配置就可以了</p><h5 id="ioc、aop"><a href="#ioc、aop" class="headerlink" title="ioc、aop"></a>ioc、aop</h5><p>IOC：控制反转（就是把new对象的权利交给容器，所有的对象都被容器控制，这就叫所谓的控制反转。）</p><p>AOP：面向切面编程（做一些与业务无关的公共功能的时候，<strong>通过aop的方式将关键的核心代码切入到业务逻辑里面去</strong>，而不需要去改每一行代码）</p><h3 id="-1"><a href="#-1" class="headerlink" title></a></h3><h4 id="spring中bean的生命周期"><a href="#spring中bean的生命周期" class="headerlink" title="spring中bean的生命周期"></a>spring中bean的生命周期</h4><p>实例化，bean属性填充，初始化bean，销毁bean</p><h4 id="bean的作用域"><a href="#bean的作用域" class="headerlink" title="bean的作用域"></a>bean的作用域</h4><p>session、request、application、singleton、prototype</p><h4 id="Spring的自动装配"><a href="#Spring的自动装配" class="headerlink" title="Spring的自动装配"></a>Spring的自动装配</h4><ol><li><p>xml中的5种自动装配：</p><table><thead><tr><th align="left"><strong>模式</strong></th><th>描述</th></tr></thead><tbody><tr><td align="left">no</td><td>这是默认的设置，它意味着没有自动装配，你应该使用显式的bean引用来连线。你不用为了连线做特殊的事。在依赖注入章节你已经看到这个了。</td></tr><tr><td align="left">byName</td><td></td></tr><tr><td align="left">byType</td><td>由属性数据类型自动装配。Spring 容器看到在 XML 配置文件中 bean 的<em>自动装配</em>的属性设置为 <em>byType</em>。然后如果它的类型匹配配置文件中的一个确切的 bean 名称，它将尝试匹配和连接属性的类型。如果存在不止一个这样的 bean，则一个致命的异常将会被抛出。</td></tr><tr><td align="left">constructor</td><td>类似于 byType，但该类型适用于构造函数参数类型。如果在容器中没有一个构造函数参数类型的 bean，则一个致命错误将会发生。</td></tr><tr><td align="left">autodetect</td><td>Spring首先尝试通过 <em>constructor</em> 使用自动装配来连接，如果它不执行，Spring 尝试通过 <em>byType</em> 来自动装配。</td></tr></tbody></table></li><li><p>基于注解的自动装配</p><ol><li>@Autowired：按照<strong>类型</strong>装配注入的，<strong>它要求依赖对象必须存在</strong></li><li>@Resource：按照<strong>名称</strong>来装配注入的，找不到与名称匹配的bean才会按照类型来配置注入</li></ol></li></ol><h4 id="Spring事务什么时候失效"><a href="#Spring事务什么时候失效" class="headerlink" title="Spring事务什么时候失效"></a>Spring事务什么时候失效</h4><ol><li>数据库不支持事务</li><li>事务方法未被Spring管理</li><li>方法没被public修饰</li><li>同一类中方法调用</li><li>未配置事务管理器</li><li>方法的事务传播类型不支持事务</li><li>不正确的捕获异常</li><li>错误的标注异常类型</li></ol><h2 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h2><h4 id="SpringMVC-八大注解"><a href="#SpringMVC-八大注解" class="headerlink" title="SpringMVC 八大注解"></a>SpringMVC 八大注解</h4><ol><li>@Controller</li><li>@RequestMapping——映射请求，也就是通过它来指定控制器可以处理哪些URL请求</li><li>@Resource和@Autowired——自动装配</li><li>@ModelAttribute和 @SessionAttributes<ul><li>ModelAttribute：优先执行，可以做初始化操作</li><li>SessionAttributes：应用在Controller上面，可以将Model中的属性同步到session当中。</li></ul></li><li>@PathVariable——接收请求路径中占位符的值</li><li>@requestParam<ul><li><strong>不加@RequestParam注解：</strong>url可以带参数也可以不带。</li><li><strong>加@RequestParam注解：</strong>url必须带参数，</li></ul></li></ol><h4 id="容器创建bean实例的方法"><a href="#容器创建bean实例的方法" class="headerlink" title="容器创建bean实例的方法"></a>容器创建bean实例的方法</h4><ol><li>反射调用构造方法</li><li>静态工厂方法</li><li>实例工厂方法</li><li>FactoryBean</li></ol><h4 id="Collection和Collections的区别"><a href="#Collection和Collections的区别" class="headerlink" title="Collection和Collections的区别"></a>Collection和Collections的区别</h4><p>Collection是一个接口</p><p>Collections是一个集合类，容器的工具类，就如同Array是数组的工具类</p><h4 id="springmvc九大内置组件"><a href="#springmvc九大内置组件" class="headerlink" title="springmvc九大内置组件"></a>springmvc九大内置组件</h4><p>可以看出，初始化策略是其他九个初始化方法的概括，而其他九个初始化方法就是我们今天要介绍的九大组件，主角登场：</p><p>1、MultipartResolver（文件处理器），对应的初始化方法是initMultipartResolver(context)，用于处理上传请求。处理方法是将普通的request包装成MultipartHttpServletRequest，后者可以直接调用getFile方法获取File。</p><p>2、LocaleResolver（当前环境处理器），对应的初始化方法是initLocaleResolver(context)，这就相当于配置数据库的方言一样，有了这个就可以对不同区域的用户显示不同的结果。SpringMVC主要有两个地方用到了Locale：一是ViewResolver视图解析的时候；二是用到国际化资源或者主题的时候。</p><p>3、ThemeResolver（主题处理器），对应的初始化方法是initThemeResolver(context)，用于解析主题。SpringMVC中一个主题对应一个properties文件，里面存放着跟当前主题相关的所有资源，如图片、css样式等。SpringMVC的主题也支持国际化。</p><p>4、HandlerMappings（处理器映射器），对应的初始化方法是initHandlerMappings(context)，这就是根据用户请求的资源uri来查找Handler的。在SpringMVC中会有很多请求，每个请求都需要一个Handler处理，具体接收到一个请求之后使用哪个Handler进行处理呢</p><p>5、HandlerAdapters（处理器适配器），对应的初始化方法是initHandlerAdapters(context)，从名字上看，它就是一个适配器。<a href="https://so.csdn.net/so/search?q=Servlet&spm=1001.2101.3001.7020">Servlet</a>需要的处理方法的结构却是固定的，都是以request和response为参数的方法。如何让固定的Servlet处理方法调用灵活的Handler来进行处理呢？这就是HandlerAdapters要做的事情。</p><p>6、HandlerExceptionResolvers（异常处理器），对应的初始化方法是initHandlerExceptionResolvers(context)，其它组件都是用来干活的。在干活的过程中难免会出现问题，出问题后怎么办呢？这就要有一个专门的角色对异常情况进行处理，在SpringMVC中就是HandlerExceptionResolver。</p><p>7、RequestToViewNameTranslator（视图名称翻译器），对应的初始化方法是initRequestToViewNameTranslator(context)，有的Handler处理完后并没有设置View也没有设置ViewName，这时就需要从request获取ViewName了，如何从request中获取ViewName就是RequestToViewNameTranslator要做的事情了。</p><p>8、ViewResolvers（页面渲染处理器），对应的初始化方法是initViewResolvers(context)，ViewResolver用来将String类型的视图名和Locale解析为View类型的视图。View是用来渲染页面的，也就是将程序返回的参数填入模板里，生成html（也可能是其它类型）文件。</p><p>9、FlashMapManager（参数传递管理器），对应的初始化方法是initFlashMapManager(context)，用来管理FlashMap的，FlashMap主要用在redirect重定向中传递参数。</p><h1 id="第一次面试"><a href="#第一次面试" class="headerlink" title="第一次面试"></a>第一次面试</h1><h3 id="1-常用HTTP常见的状态码-就讲出两个"><a href="#1-常用HTTP常见的状态码-就讲出两个" class="headerlink" title="1.常用HTTP常见的状态码?就讲出两个"></a>1.常用HTTP常见的状态码?就讲出两个</h3><p><strong>「200 OK」</strong>是最常见的成功状态码</p><p><strong>「204 No Content」</strong>也是常见的成功状态码，但响应头没有 body 数据。</p><p><strong>「301 Moved Permanently」</strong>永久性重定向。</p><p><strong>「302 Found」</strong>临时性重定向。</p><p><strong>「304 Not Modified」</strong>该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但未满足条件的情况。</p><p><strong>「400 Bad Request」</strong>该状态码表示请求报文中存在语法错误。</p><p><strong>「401 Unauthorized」</strong>该状态码表示发送的请求需要有通过HTTP认证（BASIC认证、DIGEST认证）的认证信息。</p><p><strong>「403 Forbidden」</strong>该状态码表明对请求资源的访问被服务器拒绝了，并不是客户端的请求出错。</p><p><strong>「404 Not Found」</strong> 该状态码表明服务器上无法找到请求的资源。</p><p><strong>「500 Internal Server Error」</strong>该状态码表明服务器端在执行请求时发生了错误。</p><p><strong>「503 Service Unavailable」</strong>该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。</p><h3 id="2-Java支持多继承吗-如果想要实现怎么处理"><a href="#2-Java支持多继承吗-如果想要实现怎么处理" class="headerlink" title="2.Java支持多继承吗?如果想要实现怎么处理?"></a>2.Java支持多继承吗?如果想要实现怎么处理?</h3><p>不支持多继承，可以通过接口实现处理</p><h3 id="3-构造器是否可以被重写或者重载"><a href="#3-构造器是否可以被重写或者重载" class="headerlink" title="3.构造器是否可以被重写或者重载"></a>3.构造器是否可以被重写或者重载</h3><p>构造器是不能被继承的，因为每个类的类名都不相同，而构造器名称与类名相同，所以根本谈不上继承。<br>又由于构造器<strong>不能继承，所以就不能被重写</strong>。但是，<strong>在同一个类中，构造器是可以被重载的。</strong></p><h3 id="4-Java集合类框架的基本接口有哪些"><a href="#4-Java集合类框架的基本接口有哪些" class="headerlink" title="4.Java集合类框架的基本接口有哪些?"></a>4.Java集合类框架的基本接口有哪些?</h3><ul><li>集合类<ul><li>Collection<ul><li>List<ul><li>ArrayList</li><li>LinkedList</li><li>Vector——Stack</li></ul></li><li>Set<ul><li>HashSet</li><li>TreeSet</li><li>LinkedHashSet</li></ul></li><li>Queue</li></ul></li><li>Map<ul><li>HashMap</li><li>TreeMap</li><li>Hashtable</li></ul></li></ul></li></ul><h3 id="5-说一下springmvc的请求流程"><a href="#5-说一下springmvc的请求流程" class="headerlink" title="5.说一下springmvc的请求流程"></a>5.说一下springmvc的请求流程</h3><p>1、DispatcherServlet 接收到客户端发送的请求。</p><p>2、DispatcherServlet 收到请求调用HandlerMapping 处理器映射器。</p><p>3、HandleMapping 根据请求URL 找到对应的handler 以及处理器 拦截器，返回给DispatcherServlet</p><p>4、DispatcherServlet 根据handler 调用HanderAdapter 处理器适配器。</p><p>5、HandlerAdapter 根据handler 执行处理器，也就是我们controller层写的业务逻辑，并返回一个ModeAndView</p><p>6、HandlerAdapter 返回ModeAndView 给DispatcherServlet</p><p>7、DispatcherServlet 调用 ViewResolver 视图解析器来 来解析ModeAndView</p><p>8、ViewResolve 解析ModeAndView 并返回真正的view 给DispatcherServlet</p><p>9、DispatcherServlet 将得到的视图进行渲染，填充到request域中</p><p>10、返回给客户端响应结果。</p><blockquote><p>前端发请求，前端控制器接受请求，处理请求，请求到映射器，寻找映射对象，然后返回控制器，寻找适配器，适配结束，就会映射到controller里面，后端控制返回到ModeAndView，视图进行渲染，最后返回给客户端响应结果，就展现给用户看。</p></blockquote><h3 id="6-yaml和properties的区别"><a href="#6-yaml和properties的区别" class="headerlink" title="6.yaml和properties的区别"></a>6.yaml和properties的区别</h3><p>编写方式不同</p><p>properties优先级更高</p><h3 id="7-springboot的核心注解-里面的子注解是哪些"><a href="#7-springboot的核心注解-里面的子注解是哪些" class="headerlink" title="7.springboot的核心注解,里面的子注解是哪些?"></a>7.springboot的核心注解,里面的子注解是哪些?</h3><p>一、核心注解</p><p><strong>@SpringBootApplication</strong>：主要作用是标记说明这个类是主配置类</p><ol><li><p><strong>@SpringBootConfiguration</strong>：表明配置类，<strong>而配置类也是spring容器中的组件</strong></p><p>组合了 @Configuration 注解，实现配置文件的功能。</p></li><li><p><strong>@EnableAutoConfiguration</strong></p><p>打开自动配置的功能，也可以关闭某个自动配置的选项。</p><p>如关闭数据源自动配置功能： @SpringBootApplication(exclude &#x3D; { DataSourceAutoConfiguration.class })；</p><ul><li><p>@AutoConfigurationPackage</p><ul><li>将主配置类所在的包以及子包里面所有的组件扫描并加载到spring容器中</li></ul></li><li><p>@Import（AutoConfigurationImportSelector.class）</p><ul><li>这个注解就是将需要自动装配的类以全类名的方式返回</li></ul></li></ul></li><li><p><strong>@ComponentScan</strong></p></li></ol><p>Spring组件扫描功能，让spring Boot<strong>扫描当前以及子包的注解</strong>并把它加入到程序上下文。</p><h4 id="自动装配"><a href="#自动装配" class="headerlink" title="自动装配"></a>自动装配</h4><blockquote><p>springboot的<strong>自动装配</strong>实际上就是为了从<strong>spring.factories</strong>文件中获取到对应的需要进行自动装配的类，并生成相应的Bean对象，然后将它们交给spring容器来帮我们进行管理</p></blockquote><ol><li>创建SpringApplication对象，初始化参数，判断当前<strong>应用程序的类型</strong>以及设置<strong>初始化器</strong>以及<strong>监听器</strong>，加载<strong>spring.factories</strong>文件，将内容放入缓存</li><li>执行run方法，启动过程有两个方法：<ul><li><strong>prepareContext</strong>()：完成的是对上下文对象的初始化操作</li><li><strong>refreshContext</strong>()：会进行整个容器的刷新过程<ul><li>在解析@Import注解的时候，会有一个<strong>getImport</strong>()方法，从主类开始递归解析注解，把所有包含@Import的注解都解析到，然后在<strong>processImport</strong>()方法中对import的类进行分类</li></ul></li></ul></li></ol><h4 id="启动流程"><a href="#启动流程" class="headerlink" title="启动流程"></a>启动流程</h4><ol><li>会构造一个SpringApplication的实例，构造SpringApplication的时候会进行初始化的工作</li><li>调用run方法，启动SpringApplication</li></ol><h3 id="8-springcloudalibaba中有哪些常见的组件"><a href="#8-springcloudalibaba中有哪些常见的组件" class="headerlink" title="8.springcloudalibaba中有哪些常见的组件"></a>8.springcloudalibaba中有哪些常见的组件</h3><table><thead><tr><th>组件</th><th>作用</th></tr></thead><tbody><tr><td>nacos</td><td>注册中心（服务注册与发现）、配置中心（动态配置管理）</td></tr><tr><td>Ribbon</td><td>负载均衡</td></tr><tr><td>Feign</td><td>声明式Http客户端（调用远程服务）</td></tr><tr><td>Sentinel</td><td>服务容错（限流、降级、熔断）</td></tr><tr><td>Gateway</td><td>API网关（webflux编程模式）</td></tr><tr><td>Sleuth</td><td>调用链监控</td></tr><tr><td>Seata</td><td>原Fescar，即分布式事务解决方案</td></tr></tbody></table><h4 id="服务雪崩"><a href="#服务雪崩" class="headerlink" title="服务雪崩"></a>服务雪崩</h4><p>服务雪崩：在整条链路的服务中，一个服务失败，导致整条链路的服务都失败的情形。</p><h4 id="服务限流"><a href="#服务限流" class="headerlink" title="服务限流"></a>服务限流</h4><p>监控应用流量的QPS或并发线程数等指标，当达到指定阈值时对流量进行控制，避免系统被瞬时的流量高峰冲垮，保障应用高可用性。</p><p><strong>实现方式：</strong></p><ol><li><strong>限流实现方式一: 抛出异常的方式定义资源</strong></li><li><strong>限流实现方式二: 注解方式定义资源</strong><ul><li>@SentinelResource</li></ul></li></ol><h4 id="服务熔断"><a href="#服务熔断" class="headerlink" title="服务熔断"></a>服务熔断</h4><p>下游的服务<strong>变得不可用</strong>或<strong>响应过慢</strong>，为了保证可用性，不再继续调用，直接返回</p><h4 id="服务降级"><a href="#服务降级" class="headerlink" title="服务降级"></a>服务降级</h4><p>下游的服务<strong>变得不可用</strong>或<strong>响应过慢</strong>，下游服务主动停掉一些不太重要的服务，释放服务器资源</p><h2 id="RabbitMQ消息确认机制（ACK）"><a href="#RabbitMQ消息确认机制（ACK）" class="headerlink" title="RabbitMQ消息确认机制（ACK）"></a>RabbitMQ消息确认机制（ACK）</h2><h3 id="1、消息确认机制（ACK）"><a href="#1、消息确认机制（ACK）" class="headerlink" title="1、消息确认机制（ACK）"></a>1、消息确认机制（ACK）</h3><p>保证消息从队列可靠的送达到消费者，MQ 提供了消息确认机制，消费者在订阅队列时，可以指定 autoAck 参数，当 autoAck 参数等于 true 时，RabbitMQ 会自动把发送出去的消息置为确认，然后从内存（或者磁盘）中删除，而不管消费者是否真正地消费到了这些消息。</p><h1 id="录-音："><a href="#录-音：" class="headerlink" title="录 音："></a>录 音：</h1><h2 id="速强-匡涛"><a href="#速强-匡涛" class="headerlink" title="速强 匡涛"></a>速强 匡涛</h2><h3 id="模块传参包括哪些？"><a href="#模块传参包括哪些？" class="headerlink" title="模块传参包括哪些？"></a>模块传参包括哪些？</h3><h3 id="单点登录"><a href="#单点登录" class="headerlink" title="单点登录"></a>单点登录</h3><p>认证中心，登陆的话判断用户A有没有携带通行证, 通行证就是Cookie，Session不能依据HTTP连接来判断是否为同一个用户。其实Session是依据Cookie来识别是否是同一个用户。</p><p>总结一下上面的思路：</p><ul><li>用户登录时，验证用户的账户和密码</li><li>生成一个Token保存在数据库中，将Token写到Cookie中</li><li>将用户数据保存在Session中</li><li>请求时都会带上Cookie，检查有没有登录，如果已经登录则放行</li></ul><h4 id="简单介绍es的sql服务"><a href="#简单介绍es的sql服务" class="headerlink" title="简单介绍es的sql服务"></a>简单介绍es的sql服务</h4><h3 id="springboot自动装配机制"><a href="#springboot自动装配机制" class="headerlink" title="springboot自动装配机制"></a>springboot自动装配机制</h3><p>自动装配就是自动地把其他组件中的Bean装载到IOC容器中，不需要开发人员再去配置文件中添加大量的配置，</p><p>添加SptingBootApplication注解，可以开启自动装配</p><p><strong>原理：</strong></p><p><a href="https://www.cnblogs.com/15078480385zyc/p/16154533.html">https://www.cnblogs.com/15078480385zyc/p/16154533.html</a></p><h3 id="mvc工作流程"><a href="#mvc工作流程" class="headerlink" title="mvc工作流程"></a>mvc工作流程</h3><h3 id="依赖注入有哪些注入方式"><a href="#依赖注入有哪些注入方式" class="headerlink" title="依赖注入有哪些注入方式"></a>依赖注入有哪些注入方式</h3><p><strong>依赖注入有三种方式：</strong></p><p>1：<strong>接口注入</strong>：指的就是在接口中定义要注入的信息，并通过接口完成注入。</p><p>2：<strong>set注入：</strong>指的就是在接受注入的类中定义一个set方法，并在参数中定义需要注入的元素。</p><p>3：<strong>构造注入</strong>：指的就是接受注入的类中定义一个构造方法，并在参数中定义需要注入的元素。</p><h3 id="接口和抽象类有哪些区别"><a href="#接口和抽象类有哪些区别" class="headerlink" title="接口和抽象类有哪些区别"></a>接口和抽象类有哪些区别</h3><p>抽象类是可以继承的，抽象类里面的方法不一定要全部实现</p><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><h3 id="重载重写"><a href="#重载重写" class="headerlink" title="重载重写"></a>重载重写</h3><h3 id="简单介绍一下单例模式"><a href="#简单介绍一下单例模式" class="headerlink" title="简单介绍一下单例模式"></a>简单介绍一下单例模式</h3><p><a href="https://so.csdn.net/so/search?q=%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F&spm=1001.2101.3001.7020">单例模式</a>是指在<strong>内存中有且只会创建一次对象的设计模式</strong>，在程序中多次使用同一个对象且作用相同的时候，为了防止频繁的创建对象，单例模式可以让程序在内存中创建一个对象，让所有的调用者都共享这一单例对象。单例模式的类型有两种：<strong>懒汉式</strong>和<strong>饿汉式</strong>。</p><ul><li>饿汉式：在类加载的时候已经创建好该单例对象。</li><li>懒汉式：在需要使用对象的时候才会去创建对象</li></ul><h3 id="持续集成—Jenkins"><a href="#持续集成—Jenkins" class="headerlink" title="持续集成—Jenkins"></a>持续集成—Jenkins</h3><p>erk环境</p><h2 id="魔介商务"><a href="#魔介商务" class="headerlink" title="魔介商务"></a>魔介商务</h2><h3 id="string可以被继承嘛？"><a href="#string可以被继承嘛？" class="headerlink" title="string可以被继承嘛？"></a>string可以被继承嘛？</h3><p>不能被继承，因为String类有final修饰符，而final修饰的类是不能被继承的。</p><h3 id="list和set的区别"><a href="#list和set的区别" class="headerlink" title="list和set的区别"></a>list和set的区别</h3><ol><li>List、Set都继承自Collection接口；List的特点：元素有放入顺序，且可重复；Set的特点：元素无放入顺序，且不可重复（注意：元素虽然无放入顺序，但是元素在Set中的位置是由该元素的HashCode决定的，其位置是固定的）。List支持for循环，也就是通过下标来遍历，也可以用迭代器，但是Set只能用迭代器，因为他无序，无法使用下标取值；</li><li>List接口有三个实现类：LinkedList,ArrayList,Vector。Set接口有两个实现类：HashSet（底层由HashMap实现），LinkedHashSet</li><li>Set：检索元素效率低，删除和插入效率高，插入和删除不会引起元素位置改变。List：和数组类似，List可以动态增长，查找元素效率高，插入删除元素效率低，因为会引起其他元素位置改变。</li></ol><h3 id="springmvc的实现流程"><a href="#springmvc的实现流程" class="headerlink" title="springmvc的实现流程"></a>springmvc的实现流程</h3><p>前端发请求，前端控制器接受请求，处理请求，请求到映射器，寻找映射对象，然后返回控制器，寻找适配器，适配结束，就会映射到controller里面，后端控制返回到ModeAndView，视图进行渲染，最后返回给客户端响应结果，就展现给用户看。</p><h3 id="redis的数据类型"><a href="#redis的数据类型" class="headerlink" title="redis的数据类型"></a>redis的数据类型</h3><p><img src="https://pics7.baidu.com/feed/203fb80e7bec54e7336e574b47949e594ec26a1e.png?token=49680a9bf8aa36d95033e817ea1e6517"></p><h2 id="策贸："><a href="#策贸：" class="headerlink" title="策贸："></a>策贸：</h2><h3 id="iocaop"><a href="#iocaop" class="headerlink" title="iocaop"></a>iocaop</h3><p>ioc，我把对象交给你了，你帮我去控制，创建</p><p><a href="https://blog.csdn.net/davidiao/article/details/106486915/">https://blog.csdn.net/davidiao/article/details/106486915/</a></p><h4 id="AOP的作用"><a href="#AOP的作用" class="headerlink" title="AOP的作用"></a>AOP的作用</h4><p>日志记录、性能统计、安全控制、事务处理、异常处理</p><h3 id="aop做切面时，获取目标方法中的参数"><a href="#aop做切面时，获取目标方法中的参数" class="headerlink" title="aop做切面时，获取目标方法中的参数"></a>aop做切面时，获取目标方法中的参数</h3><h3 id="Spring中所使用的设计模式"><a href="#Spring中所使用的设计模式" class="headerlink" title="Spring中所使用的设计模式"></a>Spring中所使用的设计模式</h3><p>（1）工厂模式：Spring使用工厂模式，通过BeanFactory和<a href="https://so.csdn.net/so/search?q=ApplicationContext&spm=1001.2101.3001.7020">ApplicationContext</a>来创建对象</p><p>（2）<a href="https://so.csdn.net/so/search?q=%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F&spm=1001.2101.3001.7020">单例模式</a>：Bean默认为单例模式</p><p>（3）策略模式：例如Resource的实现类，针对不同的资源文件，实现了不同方式的资源获取策略</p><p>（4）代理模式：Spring的<a href="https://so.csdn.net/so/search?q=AOP&spm=1001.2101.3001.7020">AOP</a>功能用到了JDK的动态代理和CGLIB字节码生成技术</p><p>（5）模板方法：可以将相同部分的代码放在父类中，而将不同的代码放入不同的子类中，用来解决代码重复的问题。比如RestTemplate, JmsTemplate, JpaTemplate</p><p>（6）适配器模式：Spring AOP的增强或通知（Advice）使用到了适配器模式，Spring MVC中也是用到了适配器模式适配Controller</p><p>（7）观察者模式：Spring事件驱动模型就是观察者模式的一个经典应用。</p><p>（8）桥接模式：可以根据客户的需求能够动态切换不同的数据源。比如我们的项目需要连接多个数据库，客户在每次访问中根据需要会去访问不同的数据库</p><h3 id="数组去重的三种方法"><a href="#数组去重的三种方法" class="headerlink" title="数组去重的三种方法"></a>数组去重的三种方法</h3><p><strong>一、原生JS去重</strong></p><p><a href="https://so.csdn.net/so/search?q=%E6%95%B0%E7%BB%84&spm=1001.2101.3001.7020">数组</a>去重思路：</p><p>1、建立新数组</p><p>2、<a href="https://so.csdn.net/so/search?q=%E9%81%8D%E5%8E%86&spm=1001.2101.3001.7020">遍历</a>旧数组</p><p>3、往新数组中放置旧数组的元素</p><p>4、遍历新数组</p><p>5、判断如果新数组中有相同的元素，就不往新数组中放了</p><p><strong>三、利用set结构成员值唯一的特点</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr = [100, 20, 30, 50, 30, 100, 20, 50];//[100,20,30,50]</span><br><span class="line">var arrSet = new Set(arr);</span><br><span class="line">//arrSet即没有重复元素的数组</span><br></pre></td></tr></table></figure><h3 id="数据库的几种去重方法总结"><a href="#数据库的几种去重方法总结" class="headerlink" title="数据库的几种去重方法总结"></a>数据库的几种去重方法总结</h3><p>用group by方法配合Having</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">（1）、查数据</span><br><span class="line"></span><br><span class="line">Select count(num), max(name) from student 列出表中的重复的记录数和学生名字的属性，</span><br><span class="line"></span><br><span class="line">Group by num</span><br><span class="line"></span><br><span class="line">Having count(num)&gt;1 并按照num分组后找出表中num列出现次数大于一次的。</span><br><span class="line"></span><br><span class="line">（2）、删除数据</span><br><span class="line"></span><br><span class="line">Delete from student</span><br><span class="line"></span><br><span class="line">Group by num</span><br><span class="line"></span><br><span class="line">Having count(num)&gt;1</span><br><span class="line"></span><br><span class="line">//删除表中num列所有重复的数据</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/DFSETHTDFD/article/details/114365791">数据库的几种去重方法总结_Mr.姚先森的博客-CSDN博客_数据库去重</a></p><h3 id="jdbc连接数据库流程"><a href="#jdbc连接数据库流程" class="headerlink" title="jdbc连接数据库流程"></a>jdbc连接数据库流程</h3><p><strong>1.注册驱动：</strong></p><p><code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</code>显示的加载到<a href="https://so.csdn.net/so/search?q=JVM&spm=1001.2101.3001.7020">JVM</a>中</p><p><strong>2.获取连接：</strong></p><p><strong>3.创建一个Statement语句对象</strong></p><p><strong>4.执行SQL语句:</strong></p><p><strong>5.处理结果集：</strong></p><p><strong>6.关闭资源：</strong></p><h3 id="java的数据结构"><a href="#java的数据结构" class="headerlink" title="java的数据结构"></a>java的数据结构</h3><p>arraylist超过初始大小，数据是怎么存储的</p><h3 id="linux基础命令"><a href="#linux基础命令" class="headerlink" title="linux基础命令"></a>linux基础命令</h3><h2 id="面试："><a href="#面试：" class="headerlink" title="面试："></a>面试：</h2><h3 id="什么是死性队列？"><a href="#什么是死性队列？" class="headerlink" title="什么是死性队列？"></a>什么是死性队列？</h3><p>处理死性的队列叫死性队列</p><p>死性：我们这个消息发出去了，但是一直没被消费</p><p><strong>应用场景：</strong>订单超时</p><h3 id="什么是延迟队列？"><a href="#什么是延迟队列？" class="headerlink" title="什么是延迟队列？"></a>什么是延迟队列？</h3><p>进入该队列的消息会被延迟消费的队列。</p><p><strong>应用场景：</strong>延迟消费——过一段时间校验订单的支付状态，未支付则关闭订单</p><h3 id="每五分钟执行一次的表达式怎么写？"><a href="#每五分钟执行一次的表达式怎么写？" class="headerlink" title="每五分钟执行一次的表达式怎么写？"></a>每五分钟执行一次的表达式怎么写？</h3><p>cron：每五分钟执行 *&#x2F;5 * * * *</p><h3 id="dockerfile常见命令"><a href="#dockerfile常见命令" class="headerlink" title="dockerfile常见命令"></a>dockerfile常见命令</h3><ol><li><strong>FROM</strong>：声明镜像</li><li><strong>MAINTAINER</strong>：作者信息+</li><li>**RUN:**运行指定的命令</li><li>**CMD:**执行脚本</li><li><strong>EXPOSE</strong>（expose）：设置暴露端口号</li><li><strong>ENV</strong>：设置环境变量</li><li><strong>ADD</strong>：复制命令</li><li><strong>COPY</strong>：复制命令，部分只能是本地文件</li><li><strong>VLOUME</strong>：设置你的卷</li><li><strong>WORKDIR</strong>：指定容器的工作目录</li></ol><h3 id="路由传参的三种方式"><a href="#路由传参的三种方式" class="headerlink" title="路由传参的三种方式"></a>路由传参的三种方式</h3><p>path加params的方式</p><p>name加query的方式</p><h1 id="没解决"><a href="#没解决" class="headerlink" title="没解决"></a>没解决</h1><h4 id="-2"><a href="#-2" class="headerlink" title></a></h4><p>集合框架</p><p>扩容</p><p>线程 </p><p>线程池的分类</p><p>七个</p><p>redis</p><p>mq</p><h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><p>1，有哪些数据库优化方面的经验?<br>2，请简述常用的索引有哪些种类?<br>3，HAVNG 子句 和 WHERE的异同点?<br>4，如何在Unix和Mysql时间戳之间进行转换？<br>5，Tomcat有几种部署方式？<br>6，redis和memcached什么区别？为什么高并发下有时单线程的redis比多线程的memcached效率要高？<br>7，Redis如何实现延时队列？<br>8，Spring Boot中的监视器是什么？<br>9，如何使用Spring Boot实现异常处理？<br>10，SpringMvc的控制器是不是单例模式,如果是,有什么问题,怎么解决？<br>11，SpingMvc中的控制器的注解一般用那个,有没有别的注解可以替代？<br>12，如果前台有很多个参数传入,并且这些参数都是一个对象的,那么怎么样快速得到这个对象？<br>13，怎么样把ModelMap里面的数据放入Session里面？<br>14，什么是控制反转(IOC)？什么是依赖注入？<br>15，请解释下Spring框架中的IoC？<br>16，简述 AOP 和 IOC 概念<br>17，在 Spring 中如何配置Bean ?<br>18，IOC 容器对 Bean 的生命周期？<br>19，开发中主要使用 Spring 的什么技术 ?<br>20，怎么监视Tomcat的内存使用情况？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h1 id=&quot;我的面试&quot;&gt;&lt;a href=&quot;#我的面试&quot; class=&quot;headerlink&quot; title=&quot;我的面试&quot;&gt;&lt;/a&gt;我的面试&lt;/h1&gt;&lt;h2 id=&quot;第一次&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>自我介绍+项目讲解</title>
    <link href="https://hibernation0814.github.io/2022/07/15/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    <id>https://hibernation0814.github.io/2022/07/15/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/</id>
    <published>2022-07-15T06:33:34.000Z</published>
    <updated>2022-09-08T07:30:23.766Z</updated>
    
    <content type="html"><![CDATA[<p>文档形式编辑好自己的内容「具体看模板」：</p><h3 id="1，自我介绍-项目讲解"><a href="#1，自我介绍-项目讲解" class="headerlink" title="1，自我介绍+项目讲解"></a>1，自我介绍+项目讲解</h3><p>面试官，你好。很高兴有机会来贵公司应聘java软件工程师一职。</p><p>这是我的简历，在面试官观看我的简历的同时请允许我做一个简单的自我介绍：</p><p>我叫龙思远。今年22岁。毕业于广州科技大学，毕业后任职于广州光点有限公司，有过两年的Java开发经验，如同简历上说的毕业至今一直从事的都是软件开发的工作，在工作期间先后参与<strong>企业人力资源管理系统、政府机关会议管理系统、 智慧园区系统、智能充电系统</strong>项目的开发，</p><p><strong>技术上</strong>：在项目开发的过程中,为我打下了扎实的Java基础;同时对Spring，SpringBoot，SpringCloud，Mybatis以及一些第三方中间件等有了更深层次的了解；我们公司的话规模比较小,人员流动也比较大,有时候也会去做一些前端相关的内容,其中包括Vue、ElementUI,微信小程序等技术的使用;公司项目的上线自己也有参与,所以对服务器,Linux系统,容器技术也有涉及到；数据库的话使用过mysql，oracle等关系型数据库，并且会一定的数据优化，</p><p>介绍完前面的，在项目中可以看出我有较强的责任心，对技术有浓厚的兴趣，自主学习能力较强，本人性格开朗，幽默大方，具有良好的协调与沟通能力，及团队协作精神。在工作之余，喜欢逛一些和自己专业相关的网站，并且喜欢用写博客的方式总结自己学习过的技术。</p><p>请各位考官多多指教，谢谢!</p><h3 id="2，项目介绍，"><a href="#2，项目介绍，" class="headerlink" title="2，项目介绍，"></a>2，项目介绍，</h3><p>面试官你好,接下来容我来介绍一下我的项目,我最近做的一个项目是叫<strong>葱葱智能充电系统</strong>管理系统,项目是从去年十一月份开始写的,到今年五六月的样子已经结束了,大概周期是七个月左右,我们这个项目的来历是因为新能源产业在技术上及产业化上的不断进步，以及在政策的激励下，新能源汽车开始慢慢普及，然而充电设施的不完善、不规范、标准不统一等因素制约着新能源汽车产业的发展。所以有了这套管理系统。后台主要使用的是SpringCloud作为基础框架,数据访问层使用的是MyBatis-Plus,数据库使用的是MySQL,前端主要以Vue实现,配合ElementUI进行页面的美化,同时也能提升开发的效率。</p><p>整个项目分为5个模块。其中囊括用户、商户、业务员(地推)、代理商、平台运营者多个关系链条，这里我就不进行一一的详细介绍了,在这个项目中,我主要负责的是平台运营者中的充电桩下发代理，和一些基本功能的<strong>（告警管理，公告管理，充值管理，会员管理，理商管理，订单管理，财务管理，提现记录，提现审核，报表统计等）</strong>接口的编写,文档的整理,同时也包括这些功能的页面编写。其中也遇到过一些技术难点，<strong>解决了http占用资源过多的解决办法</strong>，比如使用Websocket协议实现公告发送的技术点，<strong>（当服务器完成协议升级后（HTTP-&gt;Websocket），服务端就可以主动推送信息给客户端啦。只需要经过一次HTTP请求，就可以做到源源不断的信息传送了。）</strong>以此达到持久消息通信的目的。还有基于<strong style="color:red;">ocpp协议</strong>实现新能源车与充电桩之间实现互联互通。</p><p>在这个项目中,不仅仅巩固了自己的项目实战能力,让自己如何更加合理的把控项目的进度,项目开发的细节。我的项目介绍完毕,谢谢面试官</p><p>近期开发的系统（开发时间）-&gt; 由来 -&gt; 使用了什么技术（达到了什么效果）-&gt; 模块讲解，关系链条 -&gt; 我干了什么 -&gt; 技术难点 -&gt; 结尾</p><h3 id="3，项目的实施流程，"><a href="#3，项目的实施流程，" class="headerlink" title="3，项目的实施流程，"></a>3，项目的实施流程，</h3><h3 id="4，项目功能模块流程介绍，"><a href="#4，项目功能模块流程介绍，" class="headerlink" title="4，项目功能模块流程介绍，"></a>4，项目功能模块流程介绍，</h3><h3 id="5，实施过程中遇到的问题？「如何解决的」"><a href="#5，实施过程中遇到的问题？「如何解决的」" class="headerlink" title="5，实施过程中遇到的问题？「如何解决的」"></a>5，实施过程中遇到的问题？「如何解决的」</h3><h3 id="6，在实施过程中所做过的技术相关工作内容"><a href="#6，在实施过程中所做过的技术相关工作内容" class="headerlink" title="6，在实施过程中所做过的技术相关工作内容"></a>6，在实施过程中所做过的技术相关工作内容</h3><h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>自我介绍：面试官你好，我叫李xx，来自湖南岳阳，18年毕业于湖南理工学院，曾在深圳市微购科技担任两年实施工程师</p><p>项目介绍：在上家工作参与实施过多个项目，其中主要负责的一个是进销存系统。该系统主要实现了对库的管理，<br>该系统主要模块有产品加工、财务管理、系统管理、库存操作、库存配置。主要功能包括生产加工、出库、入库、<br>财务、Excel导出、打印、图表、产品图片等。能够有效节省了人工成本，提升了工作效率。</p><p>项目实施流程介绍：<br>1.数据初始化<br>2.项目安装部署：该系统是部署的在Windows系统上的，首先将系统的部署包准备好以及在本机上安装好mysql数据库，Tomcat以及jdk，<br>然后将部署包放入Tomcat的webapps中，进行解压。然后在数据库中建立相应的数据库，<br>随后打开解压在webapps下的WEB-INF目录下的spring中的root-context.xml文件进行数据库密码的修改<br>3.组织客户方培训、现场签到：该系统主要用于仓库管理人员，提前和甲方公司预约好了培训时间，场地，人员。培训相关人员签到后进行该系统的演示、讲解与使用<br>，演示完后将操作手册发放给在场的仓库管理人员，最后公司项目组培训负责人与用户实施负责人组织受训人员参加上机及理论考试。<br>4.了解客户方使用中的问题，记录改进：在仓库管理人员操作该系统一周后回访甲方，调查使用过程中遇到的问题以及还有什么需要改进的地方<br>然后上报到公司并跟进直至问题解决<br>5.项目的上线、验收工作：在每一个项目阶段结束时，甲方负责人对这一阶段的可交付成果进行验收，在测试及运行结束后，对系统进行总体的验收<br>6.运维</p><p>项目功能模块流程介绍：该系统主要有五个功能模块，首先是<br>产品加工，其中该模块包括加工、加工记录、包材关联。<br>财务管理模块包括的功能有新增财务、财务记录、财务分类、银行列表。<br>系统管理模块下有设置，员工管理，数据库。其中设置功能下包含系统参数，菜单管理，规则节点，系统附件。<br> 员工管理包含员工分组，员工管理。数据库包含数据备份，数据还原<br>库存操作模块包括入库，出库，库存。其中入库功能包含入库、入库记录。出库功能包含出库、出库记录、退货、退货记录<br> 库存功能包含库存记录、调拨、报废、调拨记录、报废记录<br>库存配置模块包括设置，产品管理，会员管理。其中设置功能包含供应商、仓库管理、计量单位、快递管理。<br> 产品管理功能包括产品分类、产品管理。会员管理包括会员组、会员列表</p><p>在实施过程中遇到的问题：ASP.NET state service未启动问题，弹出错误界面<br>解决方法：打开控制秒板中&#x3D;》程序和功能&#x3D;》打开或关闭windows功能，将应用程序开发功能ASP.NET功能先勾选去掉，点击【确定】，<br>更新完成后，再次打开将勾选勾上，点击【确定】，更新完成后再次启用服务即可。</p><p>在实施过程中所做过的技术相关工作内容：<br>系统管理知识，包括WINDOWS 2000，WINXP，Linux等，<br>数据库知识，包括SQL2000、ORACLE、DB2等等，SQL技能。细分可为查询分析器的使用，数据表的操作，报表的基本技能等等<br>一定的硬件知识、网络知识、行业知识和学习能力等</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>Java基础扎实，熟悉集合、程序设计原则、常用设计模式（单例、工厂、代理、责任链）等；<br>熟悉JVM虚拟机,JMM内存模型,GC算法,垃圾收集器,类加载及对象分配过程,调优命令,参数及调优工具；<br>了解JUC并发编程，对多线程及线程池，线程同步机制，锁升级，内存屏障，AQS框架等有深入理解；<br>熟悉Spring、SpringMVC、SpringBoot、Mybatis、Mybatis-Plus，能够快速构建项目编码；<br>熟悉Spring IOC容器，AOP，声明式事务，并且阅读过核心源码；<br>熟练掌握MySQL，对存储引擎、索引、事务、日志、锁、主从复制读写分离有深入了解并拥有SQL调优经验；<br>熟悉Redis缓存应用，持久化机制，主从复制机制，哨兵机制，集群并且能够利用Redis实现分布式锁；<br>熟练掌握RabbitMQ、kafka等消息中间件，熟悉消息可靠性，死信队列，延迟任务等；<br>了解Elasticsearch搜索引擎、倒排索引、分词器，并且能够搭配Logstash+Kibana+Beats搭建ELK；<br>熟悉SpringCloud和SpringCloudAlibaba核心组件，包括服务注册发现,配置中心,远程调用,服务网关,服务保护；<br>熟悉分布式事务、分布式锁、分布式全局ID等解决方案，了解企业级分布式多级缓存实现方案；</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>1，自我介绍：面试官您好，我是小方，毕业某某大学，上家公司是科泰信息技术有限公司，在这家公司工作两年，在这两年期间主要做的是医疗项目（或者：能链集团HR人事管理系统，恒力集团OA办公自动化管理系统，TATA木门CRM销售系统），主要的工作内容：1、负责与客户确认详细的项目上线与培训日程安排，2、协助项目经理完成公司产品的系统导入、实施、功能培训辅导等工作，3、负责协调客户关系，确保项目进度与质量，按照实施计划完成项目上线运营，顺利完成项目。4、负责用户培训，编写培训文档，解答用户系统使用过程中的疑问，面试官以上就是我简单的自我介绍，请问您还有什么想了解的吗？<br>（问到你项目的时候在详细的讲解项目，别一开始就把项目啪啦啪啦讲完了）<br>2，流程细节：项目的业务流程要详细，别讲半天就解释了几个功能模块，流程什么是流程，搞清楚了，什么时候开始，到什么结束，这是一个流程，不是一顿项目功能介绍<br>3，简历细节：简历上的任何一个文字单纯都要认真检查，不能有错，大忌，不会的就别写，写了就去了解一下，别一问三不知。<br>4，有些人总是以为找工作很简单，懒得出油，又不准备，还想出来拿高薪（底薪都没），搞定都不知道能活多久。</p><p>文档形式编辑好自己的内容「具体看模板」：<br>1，自我介绍，<br>2，项目介绍，<br>3，项目的实施流程，<br>4，项目功能模块流程介绍，<br>5，实施过程中遇到的问题？「如何解决的」6，在实施过程中所做过的技术相关工作内容</p><h1 id="面试技巧"><a href="#面试技巧" class="headerlink" title="面试技巧"></a>面试技巧</h1><p>九八年的洪水</p><p>模块</p><p>进公司第一步：“贿赂”</p><p>项目开发模式</p><p>传统：客户需求计划设计实现功能 </p><p>000瀑布</p><p>敏捷</p><p>迭代 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;文档形式编辑好自己的内容「具体看模板」：&lt;/p&gt;
&lt;h3 id=&quot;1，自我介绍-项目讲解&quot;&gt;&lt;a href=&quot;#1，自我介绍-项目讲解&quot; class=&quot;headerlink&quot; title=&quot;1，自我介绍+项目讲解&quot;&gt;&lt;/a&gt;1，自我介绍+项目讲解&lt;/h3&gt;&lt;p&gt;面试官，你好</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我的个人简历</title>
    <link href="https://hibernation0814.github.io/2022/06/20/hello-world/"/>
    <id>https://hibernation0814.github.io/2022/06/20/hello-world/</id>
    <published>2022-06-20T11:23:53.254Z</published>
    <updated>2023-02-08T07:47:17.189Z</updated>
    
    <content type="html"><![CDATA[<h3 id="龙思远"><a href="#龙思远" class="headerlink" title="龙思远"></a>龙思远</h3><p>男¦21¦上海¦软件工程  </p><p>13272038358¦<a href="mailto:&#x6c;&#50;&#x30;&#52;&#x38;&#x31;&#x34;&#x40;&#49;&#54;&#51;&#46;&#99;&#111;&#x6d;">&#x6c;&#50;&#x30;&#52;&#x38;&#x31;&#x34;&#x40;&#49;&#54;&#51;&#46;&#99;&#111;&#x6d;</a>¦<a href="https://hibernation0814.github.io/">https://hibernation0814.github.io/</a></p><blockquote><h4 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h4></blockquote><p><strong>后端</strong></p><p>熟悉: Java</p><p>了解：ssm、mybatis、Spring、SpringCloud、Node.js</p><p><strong>数据库</strong></p><p>熟悉：MySQL</p><p>了解：MongoDB</p><p><strong>中间件</strong></p><p>了解：Redis、RabbitMQ、Elasticsearch、Nacos、Sentinel</p><p><strong>DevOps</strong></p><p>了解：微服务、Jenkins、Gitlab CI &#x2F; CD、Nginx、Traefik、Linux</p><p><strong>云计算</strong></p><p>了解:  Docker、Docker-compose、Kubernetes</p><p><strong>前端</strong></p><p>了解: vue、Javascript、HTML、CSS、Grafana</p><blockquote><h4 id="项目经历"><a href="#项目经历" class="headerlink" title="项目经历"></a>项目经历</h4></blockquote><p><strong>Roga Developer</strong></p><p>展示地址：<a href="https://xxx.live(暂不公开哈)/">https://xxx.live（暂不公开哈）</a></p><ul><li>独立开发的基于 <strong>MERN</strong> 技术栈的 <strong>新媒体信息流整合</strong> 平台，采用 <strong>前后端分离架构</strong></li><li>使用 <strong>React</strong> 构建前端，对手机端 <strong>交互模式</strong> 进行了 <strong>专门优化</strong> ，使用 Cloudflare 作为 <strong>CDN</strong></li><li>使用 <strong>React Native</strong> 开发了 <strong>跨平台</strong> 的移动端应用，提高了开发效率，减少了 <strong>50%</strong> 的开发时间</li><li>为适应产品特性，加快迭代速度，后端由 <strong>Springboot</strong> 重构至 Node.js ，数据库由 <strong>MySQL</strong> 迁移至 <strong>MongoDB</strong> ，实现了前后一体的 <strong>集中式配置中心</strong> ，提高了接近 <strong>1 倍</strong> 的开发效率</li><li>使用 <strong>JWT</strong> 用户鉴权实现了 <strong>平台内容分级机制</strong> ，用户可自定义界面，用户设置 <strong>云端同步</strong></li><li>采用 <strong>Redis</strong> 实现了 <strong>高频信息缓存</strong> ，加快了 <strong>请求响应速度</strong> ，降低了 <strong>90%</strong> 以上的数据库压力</li><li>使用 <strong>Elasticsearch</strong> 实现 <strong>全站内容搜索</strong> ，相比 MongoDB 搜索效率提升 <strong>80%</strong> 以上</li><li>利用 <strong>RabbitMQ</strong> 的队列机制进行 <strong>削峰</strong> ，缓解了 <strong>高并发</strong> 情况下的 <strong>系统资源短缺</strong> 问题</li><li>为加强爬虫系统灵活性，将其由 <strong>Scrapy</strong> 重写为 <strong>Node.js</strong> ，实现了<strong>分批分时、错峰爬取</strong></li><li>为提升开发效率，使用 <strong>Gitlab CI&#x2F;CD</strong> 进行 <strong>持续集成</strong> 和 <strong>持续部署</strong> ，实现了 <strong>构建部署自动化</strong></li><li>采用 <strong>Nginx</strong> 和 <strong>Traefik</strong> 进行 <strong>前端部署</strong> 和 <strong>反向代理</strong> ，增强了软件系统的 <strong>安全性</strong></li><li>为配合 <strong>集群化部署</strong> ，前后端均以 <strong>Docker</strong> 作为容器，可在任一陌生机器 <strong>迅速启动应用</strong></li><li>曾使用 <strong>VPS</strong> 测试搭建了拥有 <strong>10</strong> 个节点的 <strong>K8s</strong> 集群，可进行应用的 <strong>快速扩容</strong> 和 <strong>集中式管理</strong></li></ul><p><strong>RubbishQ Developer</strong></p><ul><li>垃圾分类查询工具，负责 <strong>技术选型</strong> 、<strong>架构设计</strong> 和 <strong>前后端开发</strong> 工作</li><li>为适应产品特性，使用 <strong>MongoDB</strong> 作为数据库，实现了垃圾分类、讨论区等功能</li><li>为减轻数据库压力，使用 <strong>Redis</strong> 对搜索结果进行 <strong>缓存</strong> ，同时 <strong>极大缩短了应用响应时间</strong></li></ul><p><img src="https://img-blog.csdnimg.cn/2b83903e46e14afc8e75a3fbcedeb2b0.png?x-oss-process=image,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bCP6b6ZSGliZXJuYXRpb24=,size_16,color_FFFFFF,t_70,g_se,x_16" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;龙思远&quot;&gt;&lt;a href=&quot;#龙思远&quot; class=&quot;headerlink&quot; title=&quot;龙思远&quot;&gt;&lt;/a&gt;龙思远&lt;/h3&gt;&lt;p&gt;男	¦	21	¦	上海	¦	软件工程  &lt;/p&gt;
&lt;p&gt;13272038358	¦	&lt;a href=&quot;mailto:&amp;#x6c;&amp;#</summary>
      
    
    
    
    
  </entry>
  
</feed>
